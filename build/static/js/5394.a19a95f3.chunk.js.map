{"version":3,"file":"static/js/5394.a19a95f3.chunk.js","mappings":"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","sources":["containers/admin/AdminDashboard.jsx","validation-schemas/AdminLoginSchema.js","validation-schemas/ReportSchema.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Chart as ChartJS } from 'chart.js';\r\n\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Header from \"../../components/admin/Header\";\r\nimport Footer from \"../../components/admin/Footer\";\r\nimport AdminLoginSchema from '../../validation-schemas/AdminLoginSchema';\r\nimport { Formik, Form, ErrorMessage, Field, resetForm } from 'formik';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport ErrorText from \"../../components/utility/ErrorText\";\r\nimport ArrowDownTrayIcon from '@heroicons/react/24/outline/ArrowDownTrayIcon';\r\nimport ShareIcon from '@heroicons/react/24/outline/ShareIcon';\r\nimport EnvelopeIcon from '@heroicons/react/24/outline/EnvelopeIcon';\r\nimport EllipsisVerticalIcon from '@heroicons/react/24/outline/EllipsisVerticalIcon';\r\nimport ArrowPathIcon from \"@heroicons/react/24/outline/ArrowPathIcon\";\r\nimport Datepicker from \"react-tailwindcss-datepicker\";\r\nimport SuspenseContent from '../../components/admin/common/SuspenseContent';\r\nimport Nav from '../../components/admin/Nav';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { removeNotificationMessage } from \"../../components/admin/common/headerSlice\";\r\nimport RightSidebar from '../../components/admin/common/RightSidebar';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport ReportSchema from \"../../validation-schemas/ReportSchema\";\r\nimport TitleCard from \"../../components/admin/common/TitleCard\";\r\n\r\n\r\nconst AdminDashboard = () => {\r\n\r\n    const reportTitleAndUrl = [\r\n        { title: \"Active Subcripton of Ambassador\", url: \"active-subscribed-ambassador\" },\r\n        { title: \"Active Subscription of Subscriber\", url: \"active-subscribed-subscriber\" },\r\n        { title: \"Defaulted Subscription Payment of Ambassador\", url: \"defaulted-subscription-paymentof-ambassador\" },\r\n        { title: \"Defaulted Subscription Payment of Subscribers\", url: \"defaulted-subscription-paymentof-subscriber\" },\r\n        { title: \"Subscription cancelled by Ambassador\", url: \"subscription-cancelledby-ambassador\" },\r\n        { title: \"Subscription cancelled by Subscriber\", url: \"subscription-cancelledby-subscriber\" },\r\n        { title: \"Referral Per Ambassador\", url: \"active-inactive-referral-per-ambassador\" },\r\n        { title: \"Active Referral Per Ambassador\", url: \"active-referral-per-ambassador\" },\r\n        { title: \"Inactive Referral Per Ambassador\", url: \"inactive-referral-per-ambassador\" },\r\n        { title: \"Payment due to ambassador\", url: \"payment-due-to-ambassador\" }\r\n    ];\r\n\r\n    const reportTableHeader = [\r\n        [\"Ambassador First Name\", \"Ambassador Last Name\", \"Ambassador Referral Code\", \"Date of HVG subscription\", \"Subscription Status\", \"Date of ambassador sign up\"],\r\n        [\"Subscriber First Name\", \"Subscriber Last Name\", \"Date of HVG subscription\", \"Subscription Status\"],\r\n        [\"Ambassador First Name\", \"Ambassador Last Name\", \"Ambassador Referral Code\", \"Payment Failure Reason\"],\r\n        [\"Subscriber First Name\", \"Subscriber Last Name\", \"Payment Failure Reason\"],\r\n        [\"Ambassador First Name\", \"Ambassador Last Name\", \"Ambassador Referral Code\", \"Date of HVG subscription Cancellation\"],\r\n        [\"Subscriber First Name\", \"Subscriber Last Name\", \"Date of HVG subscription Cancellation\"],\r\n        [\"Subscriber First Name\", \"Subcriber Last Name\", \"Ambassador Referral Code Used \", \"Referred Ambassador First Name\", \"Referred Ambassador Last Name\", \"\tDate of use of referral code\", \"HVG Subscription status\"],\r\n        [\"Subscriber First Name\", \"Subcriber Last Name\", \"Ambassador Referral Code Used \", \"Referred Ambassador First Name\", \"Referred Ambassador Last Name\", \"\tDate of use of referral code\"],\r\n        [\"Subscriber First Name\", \"Subcriber Last Name\", \"Ambassador Referral Code Used \", \"Referred Ambassador First Name\", \"Referred Ambassador Last Name\", \"\tDate of use of referral code\"],\r\n        [\"Ambassador First Name\", \"Ambassador Last Name\", \"Ambassador Referral Code\", \"Current active referrals\", \"Total amount due this month\"]\r\n    ];\r\n\r\n    const [navigateUrl, setNavigateUrl] = useState('/admin/active-subscribed-ambassador');\r\n    const [values, setValues] = useState([]);\r\n    const [reportTitle, setReportTitle] = useState([]);\r\n    const [reportApiUrl, setReportApiUrl] = useState([]);\r\n    const [activeSubscribedAmbassador, setActiveSubscribedAmbassador] = useState([]);\r\n    const [activeSubscribedSubscriber, setActiveSubscribedSubscriber] = useState([]);\r\n    const [defaultedSubscriptionPaymentofambassador, setDefaultedSubscriptionPaymentofambassador] = useState([]);\r\n    const [defaultedSubscriptionPaymentofsubscriber, setDefaultedSubscriptionPaymentofsubscriber] = useState([]);\r\n    const [subscriptionCancelledbyAmbassador, setSubscriptionCancelledbyAmbassador] = useState([]);\r\n    const [subscriptionCancelledbySubscriber, setSubscriptionCancelledbySubscriber] = useState([]);\r\n    const [activeInactiveReferralPerAmbassador, setActiveInactiveReferralPerAmbassador] = useState([]);\r\n    const [activeReferralPerAmbassador, setActiveReferralPerAmbassador] = useState([]);\r\n    const [inactiveReferralPerAmbassador, setInactiveReferralPerAmbassador] = useState([]);\r\n    const [paymentDueToAmbassador, setPaymentDueToAmbassador] = useState([]);\r\n    const [index, setIndex] = useState(0);\r\n    const dispatch = useDispatch()\r\n    const statsData = [];\r\n\r\n    const [dateValue, setDateValue] = useState({\r\n        startDate: new Date(),\r\n        endDate: new Date()\r\n    });\r\n\r\n    const authInfo = JSON.parse(localStorage.getItem(\"authInfo\"));\r\n    const location = useLocation();\r\n    console.log('authInfo=', authInfo);\r\n    let [loading, setLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    let [userid, setUserid] = useState(authInfo ? authInfo.id : null);\r\n    const navigate = useNavigate();\r\n    const { newNotificationMessage, newNotificationStatus } = useState('');\r\n    const apiUrl = 'active-subscribed-ambassador';\r\n\r\n    useEffect(() => {\r\n        if (newNotificationMessage !== \"\") {\r\n            if (newNotificationStatus === 1) NotificationManager.success(newNotificationMessage, 'Success')\r\n            if (newNotificationStatus === 0) NotificationManager.error(newNotificationMessage, 'Error')\r\n            dispatch(removeNotificationMessage())\r\n        }\r\n        firstRenderReport();\r\n    }, []);\r\n    toast.configure();\r\n\r\n    const firstRenderReport = () => {\r\n        setReportApiUrl(apiUrl);\r\n        axios.get(`admin/${apiUrl}`).then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                setActiveSubscribedAmbassador(response.data.data);\r\n\r\n                console.log(activeSubscribedAmbassador);\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                //resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n        console.log('apiUrl=' + apiUrl);\r\n    }\r\n\r\n    /***********************************************************************/\r\n    /***********************************************************************/\r\n    const handleSubmit = (values, { resetForm }) => {\r\n        console.log(values);\r\n        setValues(values)\r\n        setIndex(values.report_type);\r\n        const apiUrl = reportTitleAndUrl[values.report_type].url;\r\n        var urls = apiUrl;\r\n        //reportApiUrl = apiUrl;\r\n        setReportApiUrl(apiUrl);\r\n        console.log(\"API url:\", apiUrl)\r\n        setNavigateUrl(`/admin/${apiUrl}`);\r\n        if (values.start_date) {\r\n            urls += '/' + values.start_date;\r\n        }\r\n        if (values.end_date) {\r\n            urls += '/' + values.end_date;\r\n        }\r\n\r\n        axios.get(`admin/${urls}`, values).then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                if (apiUrl === 'active-subscribed-ambassador') {\r\n                    setActiveSubscribedAmbassador(response.data.data);\r\n                }\r\n                if (apiUrl === 'active-subscribed-subscriber') {\r\n                    setActiveSubscribedSubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'defaulted-subscription-paymentof-ambassador') {\r\n                    setDefaultedSubscriptionPaymentofambassador(response.data.data);\r\n                }\r\n\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-ambassador') {\r\n                    setSubscriptionCancelledbyAmbassador(response.data.data);\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-subscriber') {\r\n                    setSubscriptionCancelledbySubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'active-inactive-referral-per-ambassador') {\r\n                    setActiveInactiveReferralPerAmbassador(response.data.data);\r\n                }\r\n                if (apiUrl === 'active-referral-per-ambassador') {\r\n                    setActiveReferralPerAmbassador(response.data.data);\r\n                }\r\n                if (apiUrl === 'inactive-referral-per-ambassador') {\r\n                    setInactiveReferralPerAmbassador(response.data.data);\r\n                }\r\n                if (apiUrl === 'payment-due-to-ambassador') {\r\n                    setPaymentDueToAmbassador(response.data.data);\r\n                }\r\n                console.log('reportApiUrl=', reportApiUrl);\r\n\r\n            } else {\r\n                if (apiUrl === 'active-subscribed-ambassador') {\r\n                    setActiveSubscribedAmbassador('');\r\n                }\r\n                if (apiUrl === 'active-subscribed-subscriber') {\r\n                    setActiveSubscribedSubscriber('');\r\n                }\r\n                if (apiUrl === 'defaulted-subscription-paymentof-ambassador') {\r\n                    setDefaultedSubscriptionPaymentofambassador('');\r\n                }\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber('');\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-ambassador') {\r\n                    setSubscriptionCancelledbyAmbassador('');\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-subscriber') {\r\n                    setSubscriptionCancelledbySubscriber('');\r\n                }\r\n                if (apiUrl === 'active-inactive-referral-per-ambassador') {\r\n                    setActiveInactiveReferralPerAmbassador('');\r\n                }\r\n                if (apiUrl === 'active-referral-per-ambassador') {\r\n                    setActiveReferralPerAmbassador('');\r\n                }\r\n                if (apiUrl === 'inactive-referral-per-ambassador') {\r\n                    setInactiveReferralPerAmbassador('');\r\n                }\r\n                if (apiUrl === 'payment-due-to-ambassador') {\r\n                    setPaymentDueToAmbassador('');\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const handleResetButton = (resetForm) => {\r\n        resetForm();\r\n        const apiUrl = reportTitleAndUrl[index].url;\r\n        setReportApiUrl(apiUrl);\r\n        setNavigateUrl(`/admin/${apiUrl}`);\r\n        \r\n        axios.get(`admin/${apiUrl}`, values).then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                if (apiUrl === 'active-subscribed-ambassador') {\r\n                    setActiveSubscribedAmbassador(response.data.data);\r\n                }\r\n                if (apiUrl === 'active-subscribed-subscriber') {\r\n                    setActiveSubscribedSubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'defaulted-subscription-paymentof-ambassador') {\r\n                    const ambassadorData = response.data.data;\r\n                    const filtered = ambassadorData.filter(item => item.userid !== null && item.payment_status === 'cancel payment');\r\n                    setDefaultedSubscriptionPaymentofambassador(filtered);\r\n                }\r\n\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    const subscriberData = response.data.data;\r\n                    const filtered = subscriberData.filter(item => item.userid !== null && item.payment_status === 'cancel payment');\r\n                    setDefaultedSubscriptionPaymentofsubscriber(filtered);\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-ambassador') {\r\n                    const cancleByAmb = response.data.data;\r\n                    const filtered = cancleByAmb.filter(item => item.userId !== null);\r\n                    setSubscriptionCancelledbyAmbassador(filtered);\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-subscriber') {\r\n                    const cancleBySub = response.data.data;\r\n                    const filtered = cancleBySub.filter(item => item.userId !== null);\r\n                    setSubscriptionCancelledbySubscriber(filtered);\r\n                }\r\n                if (apiUrl === 'active-inactive-referral-per-ambassador') {\r\n                    setActiveInactiveReferralPerAmbassador(response.data.data);\r\n                }\r\n                if (apiUrl === 'active-referral-per-ambassador') {\r\n                    setActiveReferralPerAmbassador(response.data.data);\r\n                }\r\n                if (apiUrl === 'inactive-referral-per-ambassador') {\r\n                    setInactiveReferralPerAmbassador(response.data.data);\r\n                }\r\n                if (apiUrl === 'payment-due-to-ambassador') {\r\n                    setPaymentDueToAmbassador(response.data.data);\r\n                }\r\n                console.log('reportApiUrl=', reportApiUrl);\r\n\r\n            } else {\r\n                if (apiUrl === 'active-subscribed-ambassador') {\r\n                    setActiveSubscribedAmbassador('');\r\n                }\r\n                if (apiUrl === 'active-subscribed-subscriber') {\r\n                    setActiveSubscribedSubscriber('');\r\n                }\r\n                if (apiUrl === 'defaulted-subscription-paymentof-ambassador') {\r\n                    setDefaultedSubscriptionPaymentofambassador('');\r\n                }\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber('');\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-ambassador') {\r\n                    setSubscriptionCancelledbyAmbassador('');\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-subscriber') {\r\n                    setSubscriptionCancelledbySubscriber('');\r\n                }\r\n                if (apiUrl === 'active-inactive-referral-per-ambassador') {\r\n                    setActiveInactiveReferralPerAmbassador('');\r\n                }\r\n                if (apiUrl === 'active-referral-per-ambassador') {\r\n                    setActiveReferralPerAmbassador('');\r\n                }\r\n                if (apiUrl === 'inactive-referral-per-ambassador') {\r\n                    setInactiveReferralPerAmbassador('');\r\n                }\r\n                if (apiUrl === 'payment-due-to-ambassador') {\r\n                    setPaymentDueToAmbassador('');\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })  \r\n    };\r\n\r\n    \r\n    console.log(\"activeSubscribedAmbassador\", activeSubscribedAmbassador)\r\n    console.log(\"activeSubscribedSubscriber\", activeSubscribedSubscriber)\r\n    console.log(\"defaultedSubscriptionPaymentofambassador\", defaultedSubscriptionPaymentofambassador)\r\n    console.log(\"defaultedSubscriptionPaymentofsubscriber\", defaultedSubscriptionPaymentofsubscriber)\r\n    console.log(\"subscriptionCancelledbyAmbassador\", subscriptionCancelledbyAmbassador)\r\n    console.log(\"subscriptionCancelledbySubscriber\", subscriptionCancelledbySubscriber)\r\n    console.log(\"ActiveInactiveReferralPerAmbassador\", activeInactiveReferralPerAmbassador)\r\n    console.log(\"paymentDueToAmbassador\", paymentDueToAmbassador)\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"drawer drawer-mobile\">\r\n                <input id=\"left-sidebar-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n                <div className=\"drawer-content flex flex-col \">\r\n                    <Header />\r\n                    <main className=\"flex-1 overflow-y-auto pt-2 px-2  bg-base-200\">\r\n\r\n                        {/* report section */}\r\n                        <div className=\"bg-zinc-50 px-3 py-3 rounded-xl bg-white shadow-mx border border-zinc-200\">\r\n                            <div className=\"text-xl font-semibold py-1 px-2\">Report</div>\r\n                            <div className=\"divider mt-2\"></div>\r\n                            <div className=\"\">\r\n                                <div className=\"flex w-[100%] align-center\">\r\n                                    <Formik\r\n                                        initialValues={{\r\n                                            start_date: '',\r\n                                            end_date: '',\r\n                                            report_type: null\r\n                                        }}\r\n                                        validationSchema={ReportSchema}\r\n\r\n                                        // onSubmit={(values, { resetForm }) => {\r\n                                        //     handleSubmit(values, { resetForm });\r\n                                        // }}\r\n                                        onSubmit={(values, { resetForm }) => {\r\n                                            const endDate = new Date(values.end_date);\r\n                                            endDate.setDate(endDate.getDate() + 1);\r\n                                            const adjustedValues = { ...values, end_date: endDate.toISOString().slice(0, 10) };\r\n                                            handleSubmit(adjustedValues, { resetForm });\r\n                                        }}\r\n                                        \r\n                                    >\r\n                                        {({ resetForm }) => (\r\n                                        <Form className=\"flex w-[100%] justify-between align-center py-3 rounded-sl bg-base-100 rounded px-2\">\r\n\r\n                                            <div className=\"flex flex-col\">\r\n                                                <label htmlFor=\"start_date\">Start Date</label>\r\n                                                <Field name=\"start_date\" type=\"date\" className=\"input input-bordered w-full max-w-xs\" />\r\n                                                <ErrorMessage name=\"start_date\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"flex flex-col\">\r\n                                                <label htmlFor=\"end_date\">End Date</label>\r\n                                                <Field name=\"end_date\" type=\"date\" className=\"input input-bordered w-full max-w-xs\" />\r\n                                                <ErrorMessage name=\"end_date\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                                            </div>\r\n                                            <div className=\"flex flex-col\">\r\n                                                <label htmlFor=\"report_type\">Report Type</label>\r\n                                                <Field as=\"select\" name=\"report_type\" id=\"report_type\" className=\"dropdown-content z-[1] menu p-2 shadow bg-base-100 w-64\">\r\n                                                    <option value=\"\">Select an option</option>\r\n                                                    <option value={0}> Active Subscritpion of Ambassador</option>\r\n                                                    <option value={1}> Active Subscription of Subscriber</option>\r\n                                                    <option value={2}> Defaulted Subscription payment of Ambassador</option>\r\n                                                    <option value={3}> Defaulted Subscription pyament of Subscriber</option>\r\n                                                    <option value={4}> Cancellation of Subscription-Cancelled by Ambassador</option>\r\n                                                    <option value={5}> Cancellation of Subscriptioin-Cancelled by Subcriber</option>\r\n                                                    <option value={6}> Referral Per Ambassador</option>\r\n                                                    <option value={7}> Active Referral Per Ambassador</option>\r\n                                                    <option value={8}> Inactive Referral Per Ambassador</option>\r\n                                                    <option value={9}> Payment due to Ambassador</option>\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"report_type\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"flex align-center justify-between mt-6\">\r\n                                                <button type=\"submit\" className=\"btn btn-primary mr-2 inline-block px-4 py-3 text-sm font-semibold text-center  text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\">Search</button>\r\n                                                <button type=\"button\" className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center  text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\"\r\n                                                 onClick={() => handleResetButton(resetForm)}\r\n                                                 >Reset</button>\r\n\r\n                                                {/* <button type=\"submit\" className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\">Export</button> */}\r\n                                            </div>\r\n                                        </Form>\r\n                                         )}\r\n                                    </Formik>\r\n                                </div>\r\n                            </div>\r\n                            <TitleCard title={reportTitleAndUrl[index].title || \"\"} topMargin=\"mt-2\" >\r\n                                {/* Team Member list in table format loaded constant */}\r\n                                <div className=\"overflow-x-auto w-full\">\r\n                                    <table className=\"table w-full\">\r\n                                        <thead>\r\n                                            {reportTableHeader[index].map((data, index) => {\r\n                                                return <>\r\n                                                    <td key={index}>{data}</td>\r\n                                                </>\r\n                                            })\r\n                                            }\r\n\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {reportApiUrl === 'active-subscribed-ambassador' && activeSubscribedAmbassador.length > 0 && activeSubscribedAmbassador.map((user, index) => {\r\n                                                    return (\r\n                                                        <tr key={index}>\r\n                                                            {user.firstname !== '' && <td>{user.firstname ? user.firstname : 'N/A'} </td>}\r\n                                                            {user.surname !== '' && <td>{user.surname ? user.surname : 'N/A'}</td>}\r\n                                                            {user.referral_code !== '' && <td>{user.referral_code ? user.referral_code : 'N/A'}</td>}\r\n                                                            {user.subscription_date !== '' && <td>{user.subscription_date ? new Date(user.subscription_date).toLocaleDateString() : 'N/A'}</td>}\r\n                                                            {user.subscription_status !== '' && <td>{user.subscription_status ? user.subscription_status : 'N/A'}</td>}\r\n                                                            {user.ambassador_date !== '' && <td>{user.ambassador_date ? new Date(user.ambassador_date).toLocaleDateString() : 'N/A'}</td>}\r\n                                                        </tr>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n\r\n\r\n                                            {reportApiUrl === 'active-subscribed-subscriber' && activeSubscribedSubscriber.length > 0 && activeSubscribedSubscriber.map((user, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td>{user.firstname ? user.firstname : 'N/A'} </td>\r\n                                                        <td>{user.surname ? user.surname : 'N/A'}</td>\r\n                                                        <td>{user.subscription_date ? new Date(user.subscription_date).toLocaleDateString() : 'N/A'}</td>\r\n                                                        <td>{user.subscription_status ? user.subscription_status : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                            }\r\n\r\n                                            {reportApiUrl === 'defaulted-subscription-paymentof-ambassador' && defaultedSubscriptionPaymentofambassador && defaultedSubscriptionPaymentofambassador.map((item, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{item.userid && item.userid.firstname ? item.userid.firstname : 'N/A'}</td>\r\n                                                        <td>{item.userid && item.userid.surname ? item.userid.surname : 'N/A'}</td>\r\n                                                        <td>{item.userid && item.userid.referral_code ? item.userid.referral_code : \"N/A\"}</td>\r\n                                                        <td>{item.payment_status = \"cancel\" ? \"Payment failed\" : \"\"}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'defaulted-subscription-paymentof-subscriber' && defaultedSubscriptionPaymentofsubscriber && defaultedSubscriptionPaymentofsubscriber.map((item, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                    <td>{item.userid && item.userid.firstname ? item.userid.firstname : 'N/A'}</td>\r\n                                                    <td>{item.userid && item.userid.surname ? item.userid.surname : 'N/A'}</td>\r\n                                                    <td>{item.payment_status === \"cancel\" ? \"Payment failed\" : \"\"}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'subscription-cancelledby-ambassador' && subscriptionCancelledbyAmbassador.map((item, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                    <td>{item.userId && item.userId.firstname ? item.userId.firstname : 'N/A'}</td>\r\n                                                        <td>{item.userId && item.userId.surname ? item.userId.surname : 'N/A'}</td>\r\n                                                        <td>{item.userId && item.userId.referral_code ? item.userId.referral_code : \"N/A\"}</td>\r\n                                                        <td>{item.cancellation_date ? new Date(item.cancellation_date).toLocaleDateString() : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'subscription-cancelledby-subscriber' && subscriptionCancelledbySubscriber.map((item, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                    <td>{item.userId && item.userId.firstname ? item.userId.firstname : 'N/A'}</td>\r\n                                                    <td>{item.userId && item.userId.surname ? item.userId.surname : 'N/A'}</td>\r\n                                                    <td>{item.cancellation_date ? new Date(item.cancellation_date).toLocaleDateString() : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n\r\n                                            {reportApiUrl === 'active-inactive-referral-per-ambassador' && activeInactiveReferralPerAmbassador.map((data, index) => {\r\n                                                return <>\r\n                                                <tr key={index}>\r\n                                                    <td>{data.Subscriber_firstname || \"N/A\"}</td>\r\n                                                    <td>{data.Subscriber_lastname || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_referralcode || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_firstname || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_lastname || \"N/A\"}</td>\r\n                                                    <td>{data.Date_of_use_of_referral_code || \"N/A\"}</td>\r\n                                                    <td>{data.HVG_Subscription_status || \"N/A\"}</td>\r\n                                                </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'active-referral-per-ambassador' && activeReferralPerAmbassador.map((data, index) => {\r\n                                                return <>\r\n                                                <tr key={index}>\r\n                                                    <td>{data.Subscriber_firstname || \"N/A\"}</td>\r\n                                                    <td>{data.Subscriber_lastname || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_referralcode || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_firstname || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_lastname || \"N/A\"}</td>\r\n                                                    <td>{data.Date_of_use_of_referral_code || \"N/A\"}</td>\r\n                                                </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'inactive-referral-per-ambassador' && inactiveReferralPerAmbassador.map((data, index) => {\r\n                                                return <>\r\n                                                <tr key={index}>\r\n                                                    <td>{data.Subscriber_firstname || \"N/A\"}</td>\r\n                                                    <td>{data.Subscriber_lastname || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_referralcode || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_firstname || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_lastname || \"N/A\"}</td>\r\n                                                    <td>{data.Date_of_use_of_referral_code || \"N/A\"}</td>\r\n                                                </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'payment-due-to-ambassador' && paymentDueToAmbassador.map((data, index) => {\r\n                                                return <>\r\n                                                <tr key={index}>\r\n                                                    <td>{data.Ambassador_firstname || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_lastname || \"N/A\"}</td>\r\n                                                    <td>{data.Ambassador_referralcode || \"N/A\"}</td>\r\n                                                    <td>{data.referral_count || \"N/A\"}</td>\r\n                                                    <td>{data.due_amount || \"N/A\"}</td>\r\n                                                </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            <tr><td style={{ \"text-align\": \"right\" }} colspan=\"6\"><Link className=\"inline-block px-4 py-3 text-sm font-semibold text-center text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\" to={navigateUrl}>View More</Link></td></tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TitleCard>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n                <Nav />\r\n            </div>\r\n            <RightSidebar />\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;\r\n","import * as Yup from 'yup';\r\n\r\nexport default Yup.object().shape({\r\n    email: Yup.string().email().required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required.\").min(6, 'Password is too short - should be 6 chars minimum.').max(20, 'Password is too long - should be 20 chars maximum.')\r\n    //role: Yup.string().required(\"User Type is required\")\r\n})","import * as yup from 'yup';\r\n\r\nexport default yup.object().shape({\r\n  // report_type: yup.string().required('Report type is required'),\r\n  start_date: yup.date().required('Start date is required'),\r\n  end_date: yup.date().required('End date is required'),\r\n\r\n  // start_date: yup.date().nullable(),\r\n  //   end_date: yup.date().nullable(),\r\n});"],"names":["AdminDashboard","reportTitleAndUrl","title","url","navigateUrl","setNavigateUrl","useState","values","setValues","reportTitle","setReportTitle","reportApiUrl","setReportApiUrl","activeSubscribedAmbassador","setActiveSubscribedAmbassador","activeSubscribedSubscriber","setActiveSubscribedSubscriber","defaultedSubscriptionPaymentofambassador","setDefaultedSubscriptionPaymentofambassador","defaultedSubscriptionPaymentofsubscriber","setDefaultedSubscriptionPaymentofsubscriber","subscriptionCancelledbyAmbassador","setSubscriptionCancelledbyAmbassador","subscriptionCancelledbySubscriber","setSubscriptionCancelledbySubscriber","activeInactiveReferralPerAmbassador","setActiveInactiveReferralPerAmbassador","activeReferralPerAmbassador","setActiveReferralPerAmbassador","inactiveReferralPerAmbassador","setInactiveReferralPerAmbassador","paymentDueToAmbassador","setPaymentDueToAmbassador","index","setIndex","dispatch","useDispatch","dateValue","setDateValue","startDate","Date","endDate","authInfo","JSON","parse","localStorage","getItem","useLocation","console","log","loading","setLoading","errorMessage","setErrorMessage","userid","setUserid","id","useNavigate","newNotificationMessage","newNotificationStatus","apiUrl","useEffect","NotificationManager","success","error","removeNotificationMessage","firstRenderReport","toast","configure","axios","get","concat","then","response","data","status","message","position","autoClose","catch","dismiss","_jsxs","_Fragment","children","className","_jsx","type","Header","Formik","initialValues","start_date","end_date","report_type","validationSchema","ReportSchema","onSubmit","_ref2","resetForm","setDate","getDate","handleSubmit","_ref","urls","toISOString","slice","_ref3","Form","htmlFor","Field","name","ErrorMessage","component","as","value","onClick","filtered","filter","item","payment_status","userId","handleResetButton","TitleCard","topMargin","map","length","user","firstname","surname","referral_code","subscription_date","toLocaleDateString","subscription_status","ambassador_date","cancellation_date","Subscriber_firstname","Subscriber_lastname","Ambassador_referralcode","Ambassador_firstname","Ambassador_lastname","Date_of_use_of_referral_code","HVG_Subscription_status","referral_count","due_amount","style","colspan","Link","to","Nav","RightSidebar","Footer","Yup","shape","email","required","password","min","max","yup"],"sourceRoot":""}
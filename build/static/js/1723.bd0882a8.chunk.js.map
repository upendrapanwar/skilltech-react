{"version":3,"file":"static/js/1723.bd0882a8.chunk.js","mappings":"yHAAA,MAMA,EANiBA,IAA6B,IAA5B,WAACC,EAAU,SAAEC,GAASF,EACpC,OACIG,EAAAA,EAAAA,KAAA,OAAKC,UAAS,yBAAAC,OAA2BJ,GAAaC,SAAEA,GAAe,EC2B7E,EA1BkBF,IAAmD,IAAlD,MAACM,EAAK,SAAEJ,EAAQ,UAAEK,EAAS,eAAEC,GAAeR,EAC3D,OACIS,EAAAA,EAAAA,MAAA,OAAKL,UAAW,0CAA4CG,GAAa,QAAQL,SAAA,EAG7EO,EAAAA,EAAAA,MAACC,EAAQ,CAACT,WAAYO,EAAiB,eAAiB,GAAGN,SAAA,CACxDI,EAIGE,IAAkBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BF,SAAEM,QAInEL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAGfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCF,SAC1CA,MAEH,C,6LCjBT,MAAMS,EAAUX,IAAe,IAAd,OAACY,GAAOZ,EAC5B,MAAMa,EAAoB,CACtB,CAAEP,MAAO,gDAAiDQ,IAAK,+CAC/D,CAAER,MAAO,sBAAuBQ,IAAK,sBACrC,CAAER,MAAO,wBAAyBQ,IAAK,0BAWpCC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAA0CC,IAA+CF,EAAAA,EAAAA,UAAS,KAClGG,EAAkBC,IAAqBJ,EAAAA,EAAAA,UAAS,KAChDK,EAAoBC,IAAuBN,EAAAA,EAAAA,UAAS,KAEpDO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,GAE7BS,EAAS,+CAEfC,EAAAA,EAAAA,YAAU,KACNC,GAAmB,GACpB,IACHC,EAAAA,GAAMC,YAEN,MAAMF,EAAoBA,KACtBZ,EAAgBU,GAChBK,EAAAA,EAAMC,KAAK,UAAD3B,OAAWqB,GAAU,CAAEd,OAAQA,EAAOqB,KAC/CC,MAAKC,IACEA,EAASC,KAAKC,SACdR,EAAAA,GAAMS,QAAQH,EAASC,KAAKG,QAAS,CAAEC,SAAU,aAAcC,UAAW,MAC1EtB,EAA4CgB,EAASC,KAAKA,MAC1DM,QAAQC,IAAIzB,GAChB,IACD0B,OAAMC,IACLhB,EAAAA,GAAMiB,UACFD,EAAMV,UACNN,EAAAA,GAAMgB,MAAMA,EAAMV,SAASC,KAAKG,QAAS,CAAEE,UAAW,MAE1DC,QAAQC,IAAIE,EAAM,IAEtBH,QAAQC,IAAI,UAAYjB,EAAO,EAwGrC,OACEvB,EAAAA,EAAAA,KAAA,OAAAD,UACKC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBF,UACpCO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BAENC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACxBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAsCF,UAGrDO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,4EAA2EF,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEF,UACbC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BF,UACvCC,EAAAA,EAAAA,KAAC4C,EAAAA,GAAM,CACHC,cAAe,CACXC,WAAY,GACZC,SAAU,GACVC,YAAa,MAIjBC,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EA5H/CE,EAACH,EAAMI,KAAqB,IAAnB,UAAEF,GAAWE,EACvCf,QAAQC,IAAIU,GACZ5B,EAAS4B,EAAOF,aAChB,MAAMzB,EAASb,EAAkBwC,EAAOF,aAAarC,IACrD,IAAI4C,EAAOhC,EACXV,EAAgBU,GAChBgB,QAAQC,IAAI,WAAYjB,GAEpB2B,EAAOJ,aACPS,GAAQ,IAAML,EAAOJ,YAErBI,EAAOH,WACPQ,GAAQ,IAAML,EAAOH,UAGzBnB,EAAAA,EAAMC,KAAK,UAAD3B,OAAWqD,GAAQ,CAAE9C,OAAQA,EAAOqB,KAC7CC,MAAKC,IACEA,EAASC,KAAKC,QACdR,EAAAA,GAAMS,QAAQH,EAASC,KAAKG,QAAS,CAAEC,SAAU,aAAcC,UAAW,MAC3D,gDAAXf,GACAP,EAA4CgB,EAASC,KAAKA,MAE/C,uBAAXV,GACAL,EAAkBc,EAASC,KAAKA,MAErB,yBAAXV,GACAH,EAAoBY,EAASC,KAAKA,QAMvB,gDAAXV,GACAP,EAA4C,IAEjC,uBAAXO,GACAL,EAAkB,IAEP,yBAAXK,GACAH,EAAoB,IAK5B,IACDqB,OAAMC,IACLhB,EAAAA,GAAMiB,UACFD,EAAMV,WACNoB,IACA1B,EAAAA,GAAMgB,MAAMA,EAAMV,SAASC,KAAKG,QAAS,CAAEE,UAAW,OAE1DC,QAAQC,IAAIE,EAAM,GACpB,EAyEkCW,CAAaH,EAAQ,CAAEE,aAAY,EACrCrD,SAEDyD,IAAA,IAAC,UAAEJ,GAAWI,EAAA,OACflD,EAAAA,EAAAA,MAACmD,EAAAA,GAAI,CAACxD,UAAU,sFAAqFF,SAAA,EACjGC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UAC1BO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oCAAmCF,SAAA,EAClDO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,sBAAqBF,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAO0D,QAAQ,aAAY3D,SAAC,kBAAoBC,EAAAA,EAAAA,KAAA,UAChDA,EAAAA,EAAAA,KAAC2D,EAAAA,GAAK,CAACC,KAAK,aAAaC,KAAK,OAAO5D,UAAU,uDAC/CD,EAAAA,EAAAA,KAAC8D,EAAAA,GAAY,CAACF,KAAK,aAAaG,UAAU,MAAM9D,UAAU,6BAG9DK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,sBAAqBF,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAO0D,QAAQ,WAAU3D,SAAC,gBAAkBC,EAAAA,EAAAA,KAAA,UAC5CA,EAAAA,EAAAA,KAAC2D,EAAAA,GAAK,CAACC,KAAK,WAAWC,KAAK,OAAO5D,UAAU,uDAC7CD,EAAAA,EAAAA,KAAC8D,EAAAA,GAAY,CAACF,KAAK,WAAWG,UAAU,MAAM9D,UAAU,6BAE5DK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,sBAAqBF,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAO0D,QAAQ,cAAa3D,SAAC,mBAC7BO,EAAAA,EAAAA,MAACqD,EAAAA,GAAK,CAACK,GAAG,SAASJ,KAAK,cAAc9B,GAAG,cAAc7B,UAAU,uEAAsEF,SAAA,EACnIC,EAAAA,EAAAA,KAAA,UAAQiE,MAAM,GAAElE,SAAC,sBACjBC,EAAAA,EAAAA,KAAA,UAAQiE,MAAO,EAAElE,SAAC,sDAClBC,EAAAA,EAAAA,KAAA,UAAQiE,MAAO,EAAElE,SAAC,0BAClBC,EAAAA,EAAAA,KAAA,UAAQiE,MAAO,EAAElE,SAAC,+BAGtBC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAY,CAACF,KAAK,cAAcG,UAAU,MAAM9D,UAAU,kCAK/DK,EAAAA,EAAAA,MAAA,OAAKL,UAAU,sEAAqEF,SAAA,EAChFC,EAAAA,EAAAA,KAAA,UACA6D,KAAK,SACL5D,UAAU,oCAAmCF,SAC5C,YACDC,EAAAA,EAAAA,KAAA,UACA6D,KAAK,SACL5D,UAAU,oCACTiE,QAASA,IA7G3Bd,KACvBA,IACA,MAAM7B,EAASb,EAAkBW,GAAOV,IACxCE,EAAgBU,GAEhBK,EAAAA,EAAMC,KAAK,UAAD3B,OAAWqB,GAAU,CAAEd,OAAQA,EAAOqB,KAC/CC,MAAKC,IACEA,EAASC,KAAKC,QACdR,EAAAA,GAAMS,QAAQH,EAASC,KAAKG,QAAS,CAAEC,SAAU,aAAcC,UAAW,MAC3D,gDAAXf,GACAP,EAA4CgB,EAASC,KAAKA,MAE/C,uBAAXV,GACAL,EAAkBc,EAASC,KAAKA,MAErB,yBAAXV,GACAH,EAAoBY,EAASC,KAAKA,QAMvB,gDAAXV,GACAP,EAA4C,IAEjC,uBAAXO,GACAL,EAAkB,IAEP,yBAAXK,GACAH,EAAoB,IAK5B,IACDqB,OAAMC,IACLhB,EAAAA,GAAMiB,UACFD,EAAMV,WACNoB,IACA1B,EAAAA,GAAMgB,MAAMA,EAAMV,SAASC,KAAKG,QAAS,CAAEE,UAAW,OAE1DC,QAAQC,IAAIE,EAAM,GACpB,EAmEsDyB,CAAkBf,GAAWrD,SAC3C,eAIH,SAKnBO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,OAAMF,SAAA,EACjBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UACxBC,EAAAA,EAAAA,KAAA,UAAAD,SAASW,EAAkBW,GAAOlB,WAEtCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UAC1BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAsCF,UACjDO,EAAAA,EAAAA,MAAA,SAAOL,UAAU,sBAAqBF,SAAA,EACtCC,EAAAA,EAAAA,KAAA,SAAAD,UACQC,EAAAA,EAAAA,KAAA,MAAAD,SA/Nd,CACtB,CAAC,mCAAoC,kCAAmC,0BACxE,CAAC,mCAAoC,kCAAmC,+BAAgC,mCACxG,CAAC,mCAAoC,kCAAmC,+BAAgC,oCA6N7CsB,GAAO+C,KAAI,CAACnC,EAAMZ,KACjCrB,EAAAA,EAAAA,KAAA,MAAAD,SAAiBkC,GAARZ,UAIrBf,EAAAA,EAAAA,MAAA,SAAAP,SAAA,CACsB,gDAAjBa,GAAkEG,EAAyCsD,OAAS,GAAKtD,EAAyCqD,KAAI,CAACE,EAAMjD,KAElKf,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACIO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,CAAKuE,EAAKC,UAAYD,EAAKC,UAAY,MAAM,QAC7CvE,EAAAA,EAAAA,KAAA,MAAAD,SAAKuE,EAAKE,QAAUF,EAAKE,QAAU,SACnCxE,EAAAA,EAAAA,KAAA,MAAAD,SAAKuE,EAAKG,eAAiB,iBAAmB,UAHzCpD,KAUH,uBAAjBT,GAAyCK,EAAiBoD,OAAS,GAAKpD,EAAiBmD,KAAI,CAACE,EAAMjD,KAE7Ff,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACIO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,CAAKuE,EAAKC,UAAYD,EAAKC,UAAY,MAAM,QAC7CvE,EAAAA,EAAAA,KAAA,MAAAD,SAAKuE,EAAKE,QAAUF,EAAKE,QAAU,SACnCxE,EAAAA,EAAAA,KAAA,MAAAD,SAAKuE,EAAKI,mBAAqB,IAAIC,KAAKL,EAAKI,oBAAoBE,qBAAuB,SACxF5E,EAAAA,EAAAA,KAAA,MAAAD,SAAKuE,EAAKO,gBAAkBP,EAAKO,gBAAkB,UAJ9CxD,KAUC,yBAAjBT,GAA2CO,GAAsBA,EAAmBiD,KAAI,CAACE,EAAMjD,KACrFrB,EAAAA,EAAAA,KAAA8E,EAAAA,SAAA,CAAA/E,UACHO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACIO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,CAAKuE,EAAKC,UAAYD,EAAKC,UAAY,MAAM,QAC7CvE,EAAAA,EAAAA,KAAA,MAAAD,SAAKuE,EAAKE,QAAUF,EAAKE,QAAU,SACnCxE,EAAAA,EAAAA,KAAA,MAAAD,SAAKuE,EAAKI,mBAAqB,IAAIC,KAAKL,EAAKI,oBAAoBE,qBAAuB,SACxF5E,EAAAA,EAAAA,KAAA,MAAAD,SAAKuE,EAAKO,gBAAkBP,EAAKO,gBAAkB,UAJ9CxD,iCA+BnD,EC8VV,EA9nBkB0D,KAChB,MAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aAC7CH,KAAKC,MAAMC,aAAaC,QAAQ,aAChC,KACEC,GAAWC,EAAAA,EAAAA,OACVC,EAAoBC,IAAyB1E,EAAAA,EAAAA,UAAS,MAC7D,IAAK2E,EAAWC,IAAgB5E,EAAAA,EAAAA,UAAS,IACzC,MAAM6E,EAAWV,KAAKC,MAAMC,aAAaC,QAAQ,aAC3CQ,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,OAC1C,IAAIG,EAAW,CAAC,EAChB,MAAMC,GAAWC,EAAAA,EAAAA,MACjB,IAAKC,EAAcC,IAAmBvF,EAAAA,EAAAA,WAAS,IAC1CwF,EAAqBC,IAA0BzF,EAAAA,EAAAA,UAAS,IAG7D,MAAO0F,EAAWC,IAAgB3F,EAAAA,EAAAA,WAAS,IACpC4B,EAAOgE,IAAY5F,EAAAA,EAAAA,UAAS,MAG7B6F,EAAWC,eAAexB,QAAQ,iBAGjCyB,EAAaC,IAAkBhG,EAAAA,EAAAA,UAAS,GAEzCiG,EADe,EACGF,EAClBG,EAAmBD,EAFJ,EAGfE,EAAexB,EAAUyB,MAAMF,EAAkBD,IAWvDvF,EAAAA,EAAAA,YAAU,KACR,IAAI2F,EAAM9B,EAAS+B,SAASF,MAC1B7B,EAAS+B,SAASC,YAAY,KAC9BhC,EAAS+B,SAAS/C,QAEpB9B,QAAQC,IAAI,YAAa2E,GACb,aAARA,GACFG,IAEU,YAARH,GACFI,IAEFC,IACAC,IACAC,GAAwB,GACvB,IACHhG,EAAAA,GAAMC,YAIN,MAAM8F,EAAkBA,KAEtB,MAAME,EAAY,CAChBC,OAAQ5C,EAASlD,IAEnBF,EAAAA,EACGC,KAAK,+BAAgC8F,GACrC5F,MAAMC,IACLN,EAAAA,GAAMiB,UAEFX,EAASC,KAAKC,SAChBK,QAAQC,IAAI,iBAAkBR,EAASC,KAAKA,KAAK4F,eACjDxB,EAAgBrE,EAASC,KAAKA,KAAK4F,eACrC,IAEDpF,OAAOC,IACNH,QAAQC,IAAI,QAASE,EAAM,GAC3B,EA0BA4E,EAAiBQ,UACrBhC,EAAKiC,SAAQ,CAACC,EAAMC,KAClBhC,EAASgC,GAAKD,CAAI,IAEpBzF,QAAQC,IAAI,YAAayD,GACzB,IAAIiC,EAAe/C,aAAaC,QAAQ,gBACpC+C,EAAiBhD,aAAaC,QAAQ,kBACtCgD,EAAOjD,aAAaC,QAAQ,QAC5BiD,EAAqBH,EAAejD,KAAKC,MAAMgD,GAAgB,GAGnE,GAFAE,EAAOA,EAAKE,QAAQ,WAAY,MAEL,KAAvBD,EACF,OAEF,IAAIE,EAAe,GAGjB,sCADAF,EAAqC,mBAGrCE,EAAe,OAG4B,8BAA3CF,EAAqC,mBAErCE,EAAe,MAEjB,MAAMZ,EAAY,CAChBO,aAAcG,EACdT,OAAQjC,EAAS7D,GACjB2C,eAAgB,UAChB8D,aAAcA,EACdC,UAAW,OACXC,YAAaxC,EACbmC,KAAMA,EACNtG,GAAGqG,EACH/B,aAAcO,GAEhBpE,QAAQC,IAAI,oBAAqBmF,GAEjC/F,EAAAA,EACGC,KAAK,2BAA4B8F,GACjC5F,MAAMC,IACDA,IACFO,QAAQC,IAAI,sBAAuBR,GACnCN,EAAAA,GAAMS,QAAQ,sBAAuB,CACnCE,SAAU,aACVC,UAAW,MAEbsD,GAAS8C,EAAAA,EAAAA,QAIXvD,aAAawD,QAAQ,eAAgB,GAAG,IAEzClG,OAAOC,IACNhB,EAAAA,GAAMiB,UACNwC,aAAawD,QAAQ,eAAgB,IACjCjG,EAAMV,UACRN,EAAAA,GAAMgB,MAAM,kBAAmB,CAC7BL,SAAU,aACVC,UAAW,KAEf,IAEJkF,GAAc,EAQVD,EAAiBvF,IACrB8D,EAAKiC,SAAQ,CAACC,EAAMC,KAClBhC,EAASgC,GAAKD,CAAI,IAEpBzF,QAAQC,IAAI,kBAAmBR,GAC/B,IAAIkG,EAAe/C,aAAaC,QAAQ,gBACpCgD,EAAOjD,aAAaC,QAAQ,QAChCgD,EAAOA,EAAKE,QAAQ,WAAY,MAChC,IAAID,EAAqBH,EAAejD,KAAKC,MAAMgD,GAAgB,GACnE3F,QAAQC,IAAI,sBAAuB6F,GACnC,IAAIE,EAAe,GACnB,GAA2B,KAAvBF,EACF,OAIA,sCADAA,EAAqC,mBAGrCE,EAAe,OAG4B,8BAA3CF,EAAqC,mBAErCE,EAAe,MAEjB,MAAMZ,EAAY,CAChBO,aAAcG,EACdT,OAAQjC,EAAS7D,GACjB2C,eAAgB,SAChB8D,aAAcA,EACdC,UAAW,QACXC,YAAaxC,EACbmC,KAAMA,GAIRxG,EAAAA,EACGC,KAAK,2BAA4B8F,GACjC5F,MAAMC,IACDA,IAEFN,EAAAA,GAAMS,QAAQ,qBAAsB,CAClCE,SAAU,aACVC,UAAW,MAEbsD,GAAS8C,EAAAA,EAAAA,OAIX,IAEDjG,OAAOC,IACNhB,EAAAA,GAAMiB,UACFD,EAAMV,UACRN,EAAAA,GAAMgB,MAAM,kBAAmB,CAC7BL,SAAU,aACVC,UAAW,KAEf,IAEJkF,GAAc,EAQVA,EAAeA,KACnB5F,EAAAA,EACGgH,IAAI,yBAA2BjD,EAAS7D,IACxCC,MAAMC,IACLN,EAAAA,GAAMiB,UAEFX,EAASC,MACPD,EAASC,KAAKC,SAChBwD,EAAa1D,EAASC,KAAKA,MAC3BM,QAAQC,IAAI,4BAA6BR,EAASC,KAAKA,MAE3D,IAEDQ,OAAOC,IACNhB,EAAAA,GAAMiB,UACFD,EAAMV,UACRN,EAAAA,GAAMgB,MAAM,wBAAyB,CACnCL,SAAU,aACVC,UAAW,KAEf,GACA,EAkEAuG,EAAsBC,IAC1BlH,EAAAA,EACKmH,IAAI,wBAA0BD,GAC9B/G,MAAMC,IACHN,EAAAA,GAAMiB,UAEFX,EAASC,MAAQD,EAASC,KAAKC,SAC/BK,QAAQC,IAAI,wBAAyBR,EAASC,KAAKA,MACnDuF,IACA9F,EAAAA,GAAMS,QAAQ,qBAAsB,CAChCE,SAAU,aACVC,UAAW,MAEnB,IAEHG,OAAOC,IACJhB,EAAAA,GAAMiB,UACFD,EAAMV,UACNN,EAAAA,GAAMgB,MAAM,wBAAyB,CACjCL,SAAU,aACVC,UAAW,KAEnB,GACF,EAGJoF,EAAyBA,KAC7B9F,EAAAA,EAAMC,KAAK,gCAAiC,CAAEpB,OAAQuE,EAASlD,KAC9DC,MAAKC,IACEA,EAASC,KAAKC,SACdR,EAAAA,GAAMS,QAAQH,EAASC,KAAKG,QAAS,CAAEC,SAAU,aAAcC,UAAW,MACtEiE,EAAuBvE,EAASC,KAAKA,MACrCM,QAAQC,IAAI,kCAAmCR,EAASC,KAAKA,MACrE,IACCQ,OAAMC,IACLhB,EAAAA,GAAMiB,UACFD,EAAMV,UACNN,EAAAA,GAAMgB,MAAMA,EAAMV,SAASC,KAAKG,QAAS,CAAEE,UAAW,MAE1DC,QAAQC,IAAIE,EAAM,GACpB,EAIJ,OACEpC,EAAAA,EAAAA,MAAAwE,EAAAA,SAAA,CAAA/E,SAAA,EACEC,EAAAA,EAAAA,KAACgJ,EAAAA,EAAM,KACP1I,EAAAA,EAAAA,MAAA,OAAKL,UAAU,mBAAkBF,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,UAC9BC,EAAAA,EAAAA,KAAA,OAAKiJ,IAAKC,EAAQC,IAAI,QAExBnJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,UAC/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACxBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBF,UAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,UACtCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAClBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+CAQhBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBF,UAClCO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BF,UAC1CC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACxBO,EAAAA,EAAAA,MAAA,KAAGL,UAAU,OAAMF,SAAA,CAAC,gBACNC,EAAAA,EAAAA,KAAA,UAAAD,SAASiF,EAASpB,OAAe,KAC7C5D,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWF,UACzBC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2BAMrBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BF,UAC1CC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,SACzBuG,GAAuBA,EAAoBlC,KAAKE,IACxCtE,EAAAA,EAAAA,KAAA8E,EAAAA,SAAA,CAAA/E,UACLC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UAC1BO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,MAAKF,SAAA,EAClBO,EAAAA,EAAAA,MAAA,KAAGL,UAAU,aAAYF,SAAA,CAAC,mBACXC,EAAAA,EAAAA,KAAA,UAAAD,SAASqG,QAExB9F,EAAAA,EAAAA,MAAA,KAAGL,UAAU,aAAYF,SAAA,CAAC,oBACRC,EAAAA,EAAAA,KAAA,UAAAD,SAASuE,EAAK8E,eAAiB9E,EAAK8E,eAAiB,YAEvE9I,EAAAA,EAAAA,MAAA,KAAGL,UAAU,aAAYF,SAAA,CAAC,gBACZC,EAAAA,EAAAA,KAAA,UAAAD,SAASuE,EAAK+E,WAAU,IAAAnJ,OAAOoE,EAAK+E,YAAe,yBAUzErJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,UACtCO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACvBO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6CAENO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBF,UACnCC,EAAAA,EAAAA,KAAA,OAAKiJ,IAAKK,EAAAA,EAAUH,IAAI,QAE1BnJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcF,UAC3BO,EAAAA,EAAAA,MAAA,UACEuD,KAAK,SACL5D,UAAU,oCAAmCF,SAAA,CAC9C,oBAECC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWF,UACzBC,EAAAA,EAAAA,KAAA,OAAKiJ,IAAKM,EAAAA,EAAoBJ,IAAI,qBAQ9CnJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,UACvBO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mCAENC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACxBO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,qBAAoBF,SAAA,EACjCO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,SAAC,sBACjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,SAAC,gBAEnCO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,SAAC,sBACjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,SAAC,gBAEnCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBF,UAChCO,EAAAA,EAAAA,MAAA,UACEuD,KAAK,SACL5D,UAAU,oCAAmCF,SAAA,CAC9C,qBAECC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWF,UACzBC,EAAAA,EAAAA,KAAA,OAAKiJ,IAAKM,EAAAA,EAAoBJ,IAAI,4BAWpDnJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBF,UACrCO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,OAAMF,SAAA,EACnBO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMF,SAAC,wCAEtBO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,YAAWF,SAAA,EACxBO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,uCAAsCF,SAAA,EACrDO,EAAAA,EAAAA,MAAA,SAAOL,UAAU,sBAAqBF,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,SAAAD,UACEO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,iBAChBC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,6BAChBC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,iBAGpBC,EAAAA,EAAAA,KAAA,SAAAD,SACGkH,EAAa5C,OAAS,EACrB4C,EAAa7C,KAAI,CAAC4D,EAAMC,KACtB3H,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAEiI,EAAKyB,gBACtBzJ,EAAAA,EAAAA,KAAA,MAAAD,SAAK,IAAI4E,KAAKqD,EAAK0B,WAAW9E,wBAC9B5E,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UACE6D,KAAK,SACL5D,UAAU,oCAEViE,QAASA,IAAM2E,EAAmBb,EAAK2B,KAAK5J,SAC7C,eATIkI,MAgBXjI,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAI4J,QAAQ,IAAG7J,SAAC,8BAKxBO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,6BAA4BF,SAAA,EACzCC,EAAAA,EAAAA,KAAA,UACAC,UAAU,oCACViE,QAlfW2F,KACf/C,EAAeD,EAAc,EAAE,EAifRiD,SAA0B,IAAhBjD,EAAkB9G,SAAC,cAGhDC,EAAAA,EAAAA,KAAA,UACAC,UAAU,oCACViE,QA3fW6F,KACfjD,EAAeD,EAAc,EAAE,EA0fRiD,SAAU/C,GAAmBtB,EAAUpB,OAAOtE,SAAC,gBAM1DO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,UAASF,SAAA,EACtBO,EAAAA,EAAAA,MAAA,UACEuD,KAAK,SACL5D,UAAU,oCACViE,QAASA,KA9czBgC,EAAS,sBA8csC,EAAAnG,SAAA,CAChC,gBACe,KACdC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWF,UACzBC,EAAAA,EAAAA,KAAA,OAAKiJ,IAAKM,EAAAA,EAAoBJ,IAAI,WAGtC7I,EAAAA,EAAAA,MAAA,UACEuD,KAAK,SACL5D,UAAU,oCACViE,QAASA,KA/czBgC,EAAS,yBA+c2C,EAAAnG,SAAA,CACrC,qBACoB,KACnBC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWF,UACzBC,EAAAA,EAAAA,KAAA,OAAKiJ,IAAKM,EAAAA,EAAoBJ,IAAI,sBAQ/CnJ,EAAAA,EAAAA,KAACQ,EAAO,CAACC,OAAQkF,KAEhB3F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBF,UACrCO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAENO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAsCF,UACnDO,EAAAA,EAAAA,MAAA,SAAOL,UAAU,sBAAqBF,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SAAAD,UACEO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,gBAChBC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,qBAChBC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,qBAChBC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,yBAGpBO,EAAAA,EAAAA,MAAA,SAAAP,SAAA,EACEO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,OAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBF,SAAC,iBAG1CO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,OAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBF,SAAC,iBAG1CO,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIwJ,MAAM,MAAKzJ,SAAC,OAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBF,SAAC,sCAQ/CO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,eAAcF,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAC,sBACrBO,EAAAA,EAAAA,MAAA,UACEuD,KAAK,SACL5D,UAAU,oCAAmCF,SAAA,CAC9C,iBAECC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWF,UACzBC,EAAAA,EAAAA,KAAA,OAAKiJ,IAAKM,EAAAA,EAAoBJ,IAAI,2BASlDnJ,EAAAA,EAAAA,KAACgK,EAAAA,EAAM,MACN,C","sources":["components/admin/common/Subtitle.jsx","components/admin/common/TitleCard.jsx","containers/ambessador/Reports.jsx","containers/ambessador/Dashboard.jsx"],"sourcesContent":["const Subtitle = ({styleClass, children}) => {\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import Subtitle from \"../../../components/admin/common/Subtitle\"\r\n\r\n  \r\n  const TitleCard = ({title, children, topMargin, TopSideButtons}) => {\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard","import React, { useEffect, useState } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field, resetForm } from 'formik';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport TitleCard from '../../components/admin/common/TitleCard';\r\n\r\nexport const Reports = ({userId}) => {\r\n    const reportTitleAndUrl = [\r\n        { title: \"Defaulted Subscription Payment of Subscribers\", url: \"defaulted-subscription-paymentof-subscriber\" },\r\n        { title: \"My Active Referrals\", url: \"my-active-referral\" },\r\n        { title: \"My Inactive Referrals\", url: \"my-inactive-referral\" },\r\n        // { title: \"Payment due to me this month\", url: \"payment-due-this-month\" }\r\n    ];\r\n\r\n    const reportTableHeader = [\r\n        [\"Referral (Subscriber) First Name\", \"Referral (Subscriber) Last Name\", \"Payment Failure Reason\"],\r\n        [\"Referral (Subscriber) First Name\", \"Referral (Subscriber) Last Name\", \"Date of use of referral code\", \"Referral Status (by Subscriber)\"],\r\n        [\"Referral (Subscriber) First Name\", \"Referral (Subscriber) Last Name\", \"Date of use of referral code\", \"Referral Status (by Subscriber)\"],\r\n        // [\"Ambassador First Name\", \"Ambassador Last Name\", \"Ambassador Referral Code\", \"Current active referrals\", \"Total amount due this month\"]\r\n    ];\r\n\r\n    const [reportApiUrl, setReportApiUrl] = useState([]);\r\n    const [defaultedSubscriptionPaymentofsubscriber, setDefaultedSubscriptionPaymentofsubscriber] = useState([]);\r\n    const [myActiveReferral, setActiveReferral] = useState([]);\r\n    const [myInactiveReferral, setInactiveReferral] = useState([]);\r\n    // const [paymentDueThisMonth, setPaymentDueThisMonth] = useState([]);\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const apiUrl = 'defaulted-subscription-paymentof-subscriber';\r\n\r\n    useEffect(() => {\r\n        firstRenderReport();\r\n    }, []);\r\n    toast.configure();\r\n\r\n    const firstRenderReport = () => {   \r\n        setReportApiUrl(apiUrl);\r\n        axios.post(`common/${apiUrl}`, { userId: userId.id })\r\n        .then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                setDefaultedSubscriptionPaymentofsubscriber(response.data.data);\r\n                console.log(defaultedSubscriptionPaymentofsubscriber);\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n        console.log('apiUrl=' + apiUrl);\r\n    }\r\n\r\n    const handleSubmit = (values, { resetForm }) => {\r\n        console.log(values);\r\n        setIndex(values.report_type);\r\n        const apiUrl = reportTitleAndUrl[values.report_type].url;\r\n        var urls = apiUrl;\r\n        setReportApiUrl(apiUrl);\r\n        console.log(\"API url:\", apiUrl);\r\n\r\n        if (values.start_date) {\r\n            urls += '/' + values.start_date;\r\n        }\r\n        if (values.end_date) {\r\n            urls += '/' + values.end_date;\r\n        }\r\n\r\n        axios.post(`common/${urls}`, { userId: userId.id })\r\n        .then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'my-active-referral') {\r\n                    setActiveReferral(response.data.data);\r\n                }\r\n                if (apiUrl === 'my-inactive-referral') {\r\n                    setInactiveReferral(response.data.data);\r\n                }\r\n                // if (apiUrl === 'payment-due-this-month') {\r\n                //     setPaymentDueThisMonth(response.data.data);\r\n                // }\r\n            } else {\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber('');\r\n                }\r\n                if (apiUrl === 'my-active-referral') {\r\n                    setActiveReferral('');\r\n                }\r\n                if (apiUrl === 'my-inactive-referral') {\r\n                    setInactiveReferral('');\r\n                }\r\n                // if (apiUrl === 'payment-due-this-month') {\r\n                //     setPaymentDueThisMonth('');\r\n                // }\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n\r\n    const handleResetButton = (resetForm) => {\r\n        resetForm();\r\n        const apiUrl = reportTitleAndUrl[index].url;\r\n        setReportApiUrl(apiUrl);\r\n\r\n        axios.post(`common/${apiUrl}`, { userId: userId.id })\r\n        .then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'my-active-referral') {\r\n                    setActiveReferral(response.data.data);\r\n                }\r\n                if (apiUrl === 'my-inactive-referral') {\r\n                    setInactiveReferral(response.data.data);\r\n                }\r\n                // if (apiUrl === 'payment-due-this-month') {\r\n                //     setPaymentDueThisMonth(response.data.data);\r\n                // }\r\n            } else {\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber('');\r\n                }\r\n                if (apiUrl === 'my-active-referral') {\r\n                    setActiveReferral('');\r\n                }\r\n                if (apiUrl === 'my-inactive-referral') {\r\n                    setInactiveReferral('');\r\n                }\r\n                // if (apiUrl === 'payment-due-this-month') {\r\n                //     setPaymentDueThisMonth('');\r\n                // }\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n    };\r\n\r\n  return (\r\n    <div>\r\n         <div className=\"hvg__card_section mb-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h4>Ambassador Reports</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table_view_panel table-responsive-sm\">\r\n\r\n                {/* report section */}\r\n                <div className=\"bg-zinc-50 px-3 py-3 rounded-xl bg-white shadow-mx border border-zinc-200\">\r\n                            <div className=\"divider mt-2\"></div>\r\n                            <div className=\"\">\r\n                                <div className=\"flex w-[100%] align-center\">\r\n                                    <Formik\r\n                                        initialValues={{\r\n                                            start_date: '',\r\n                                            end_date: '',\r\n                                            report_type: null\r\n                                        }}\r\n                                        // validationSchema={ReportSchema}\r\n\r\n                                        onSubmit={(values, { resetForm }) => {\r\n                                            handleSubmit(values, { resetForm });\r\n                                        }}\r\n                                    >\r\n                                        {({ resetForm }) => (\r\n                                        <Form className=\"flex w-[100%] justify-between align-center py-3 rounded-sl bg-base-100 rounded px-2\">\r\n                                            <div className='container'>\r\n                                            <div className='row ambassador_reports_search_row'>\r\n                                            <div className=\"flex flex-col col-3\">\r\n                                                <label htmlFor=\"start_date\">Start Date: </label><br />\r\n                                                <Field name=\"start_date\" type=\"date\" className=\"form-control input input-bordered w-full max-w-xs\" />\r\n                                                <ErrorMessage name=\"start_date\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"flex flex-col col-3\">\r\n                                                <label htmlFor=\"end_date\">End Date: </label><br />\r\n                                                <Field name=\"end_date\" type=\"date\" className=\"form-control input input-bordered w-full max-w-xs\" />\r\n                                                <ErrorMessage name=\"end_date\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                                            </div>\r\n                                            <div className=\"flex flex-col col-6\">\r\n                                                <label htmlFor=\"report_type\">Report Type: </label>\r\n                                                <Field as=\"select\" name=\"report_type\" id=\"report_type\" className=\"form-control dropdown-content z-[1] menu p-2 shadow bg-base-100 w-64\">\r\n                                                    <option value=\"\">Select an option</option>\r\n                                                    <option value={0}> Defaulted Subscriptions Payments of Subscribers</option>\r\n                                                    <option value={1}> My Active Referrals</option>\r\n                                                    <option value={2}> My Inactive Referrals</option>\r\n                                                    {/* <option value={3}> Payment due to me this month</option> */}\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"report_type\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                                            </div>\r\n                                            </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"flex align-center justify-between mt-6 ambassador_reports_search_ft\">\r\n                                                <button \r\n                                                type=\"submit\" \r\n                                                className=\"btn btn-primary btn-color bt-size\"\r\n                                                >Search</button>\r\n                                                <button \r\n                                                type=\"button\" \r\n                                                className=\"btn btn-primary btn-color bt-size\"\r\n                                                 onClick={() => handleResetButton(resetForm)}\r\n                                                 >Reset</button>\r\n\r\n                                                {/* <button type=\"submit\" className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\">Export</button> */}\r\n                                            </div>\r\n                                        </Form>\r\n                                         )}\r\n                                    </Formik>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <strong>{reportTitleAndUrl[index].title}</strong>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <div className=\"table_view_panel table-responsive-sm\">\r\n                                    <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                            <tr>\r\n                                                {reportTableHeader[index].map((data, index) => (\r\n                                                    <th key={index}>{data}</th>\r\n                                                ))}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {reportApiUrl === 'defaulted-subscription-paymentof-subscriber' && defaultedSubscriptionPaymentofsubscriber.length > 0 && defaultedSubscriptionPaymentofsubscriber.map((user, index) => {\r\n                                                    return (\r\n                                                        <tr key={index}>\r\n                                                            <td>{user.firstname ? user.firstname : 'N/A'} </td>\r\n                                                            <td>{user.surname ? user.surname : 'N/A'}</td>\r\n                                                            <td>{user.payment_status ? 'Payment failed' : 'N/A'}</td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n\r\n\r\n                                            {reportApiUrl === 'my-active-referral' && myActiveReferral.length > 0 && myActiveReferral.map((user, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td>{user.firstname ? user.firstname : 'N/A'} </td>\r\n                                                        <td>{user.surname ? user.surname : 'N/A'}</td>\r\n                                                        <td>{user.referral_used_date ? new Date(user.referral_used_date).toLocaleDateString() : 'N/A'}</td>\r\n                                                        <td>{user.referral_status ? user.referral_status : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                            }\r\n\r\n                                            {reportApiUrl === 'my-inactive-referral' && myInactiveReferral && myInactiveReferral.map((user, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{user.firstname ? user.firstname : 'N/A'} </td>\r\n                                                        <td>{user.surname ? user.surname : 'N/A'}</td>\r\n                                                        <td>{user.referral_used_date ? new Date(user.referral_used_date).toLocaleDateString() : 'N/A'}</td>\r\n                                                        <td>{user.referral_status ? user.referral_status : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {/* {reportApiUrl === 'payment-due-this-month' && paymentDueThisMonth && paymentDueThisMonth.map((user, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{user.firstname ? user.firstname : 'N/A'} </td>\r\n                                                        <td>{user.surname ? user.surname : 'N/A'}</td>\r\n                                                        <td>{user.referral_code ? user.referral_code : 'N/A'}</td>\r\n                                                        <td>{user.referral_count ? user.referral_count : 'N/A'}</td>\r\n                                                        <td>{user.due_amount ? user.due_amount : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })} */}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport banner from \"../../assets/images/Banner.png\";\r\nimport solarArrowUpBroken from \"../../assets/images/solar_arrow-up-broken.svg\";\r\nimport barChart from \"../../assets/images/The-bar-chart-showing-the-monthly-refractivity-for-Abia-state1.svg\";\r\nimport Header from \"../../components/common/Header\";\r\nimport Footer from \"../../components/common/Footer\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { clearCart } from \"../../redux/cartSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Reports } from \"./Reports\";\r\n\r\nconst Dashboard = () => {\r\n  const userInfo = JSON.parse(localStorage.getItem(\"authInfo\"))\r\n    ? JSON.parse(localStorage.getItem(\"authInfo\"))\r\n    : null;\r\n  const location = useLocation();\r\n  const [cancellationStatus, setCancellationStatus] = useState(null);\r\n  let [myCourses, setMyCourses] = useState(\"\");\r\n  const userData = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  var cartData = {};\r\n  const navigate = useNavigate();\r\n  let [referralCode, setReferralCode] = useState(false);\r\n  let [paymentDueThisMonth, setPaymentDueThisMonth] = useState([]);\r\n\r\n  // ****************************\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // ********************************\r\n  const referral = sessionStorage.getItem(\"referralCode\");\r\n  // ********************************\r\n  //My Courses pagination \r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = myCourses.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const nextPage = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  // ********************************\r\n  useEffect(() => {\r\n    let tmp = location.pathname.slice(\r\n      location.pathname.lastIndexOf(\"/\"),\r\n      location.pathname.length\r\n    );\r\n    console.log(\"pathname=\", tmp);\r\n    if (tmp === \"/success\") {\r\n      paymentSuccess();\r\n    }\r\n    if (tmp === \"/cancel\") {\r\n      cancelPayment();\r\n    }\r\n    getMyCourses();\r\n    getReferralCode();\r\n    paymentDueToAmbassador();\r\n  }, []);\r\n  toast.configure();\r\n\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  const getReferralCode = () => {\r\n    //ex: HG00123\r\n    const dataArray = {\r\n      userid: userInfo.id,\r\n    };\r\n    axios\r\n      .post(\"common/fetch-ambassador-code\", dataArray)\r\n      .then((response) => {\r\n        toast.dismiss();\r\n\r\n        if (response.data.status) {\r\n          console.log(\"referral_code=\", response.data.data.referral_code);\r\n          setReferralCode(response.data.data.referral_code);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Handle courses redirects\r\n   *\r\n   */\r\n  const handleCourses = () => {\r\n    navigate(\"/learner/my-courses\");\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Handle order history\r\n   *\r\n   */\r\n  const handleOrderHistory = () => {\r\n    navigate(\"/learner/order-history\");\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Handle payment success from payfast\r\n   *\r\n   */\r\n  const paymentSuccess = async (response) => {\r\n    cart.forEach((item, i) => {\r\n      cartData[i] = item;\r\n    });\r\n    console.log(\"cartData=\", cartData);\r\n    let merchantData = localStorage.getItem(\"merchantData\");\r\n    let subscriptionId = localStorage.getItem(\"subscriptionId\");\r\n    let uuid = localStorage.getItem(\"uuid\");\r\n    let merchantDataResult = merchantData ? JSON.parse(merchantData) : \"\";\r\n    uuid = uuid.replace(/^\"(.*)\"$/, '$1');\r\n\r\n    if (merchantDataResult === \"\") {\r\n      return;\r\n    }\r\n    let is_recurring = \"\";\r\n    if (\r\n      merchantDataResult[\"item_description\"] ===\r\n      \"Order for Hign Vista Subscription\"\r\n    ) {\r\n      is_recurring = \"yes\";\r\n    }\r\n    if (\r\n      merchantDataResult[\"item_description\"] === \"Order for one off payment\"\r\n    ) {\r\n      is_recurring = \"no\";\r\n    }\r\n    const dataArray = {\r\n      merchantData: merchantDataResult,\r\n      userid: userData.id,\r\n      payment_status: \"success\",\r\n      is_recurring: is_recurring,\r\n      is_active: \"true\",\r\n      coursesData: cartData,\r\n      uuid: uuid,\r\n      id:subscriptionId,\r\n      referralCode: referral,\r\n    }; \r\n    console.log(\"Updated dataArray\", dataArray)\r\n\r\n    axios\r\n      .post(\"common/save-subscription\", dataArray)\r\n      .then((response) => {\r\n        if (response) {\r\n          console.log(\"Save subscription: \", response)\r\n          toast.success(\"Payment Successful!\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n          });\r\n          dispatch(clearCart());\r\n\r\n          //navigate('/login');\r\n        }\r\n        localStorage.setItem(\"merchantData\", \"\");\r\n      })\r\n      .catch((error) => {\r\n        toast.dismiss();\r\n        localStorage.setItem(\"merchantData\", \"\");\r\n        if (error.response) {\r\n          toast.error(\"Payment Failed!\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n          });\r\n        }\r\n      });\r\n    getMyCourses();\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Get cancel payment data from payfast\r\n   *\r\n   */\r\n  const cancelPayment = (response) => {\r\n    cart.forEach((item, i) => {\r\n      cartData[i] = item;\r\n    });\r\n    console.log(\"cancel payment=\", response);\r\n    let merchantData = localStorage.getItem(\"merchantData\");\r\n    let uuid = localStorage.getItem(\"uuid\");\r\n    uuid = uuid.replace(/^\"(.*)\"$/, '$1');\r\n    let merchantDataResult = merchantData ? JSON.parse(merchantData) : \"\";\r\n    console.log(\"merchantDataResult=\", merchantDataResult);\r\n    let is_recurring = \"\";\r\n    if (merchantDataResult === \"\") {\r\n      return;\r\n    }\r\n    if (\r\n      merchantDataResult[\"item_description\"] ===\r\n      \"Order for Hign Vista Subscription\"\r\n    ) {\r\n      is_recurring = \"yes\";\r\n    }\r\n    if (\r\n      merchantDataResult[\"item_description\"] === \"Order for one off payment\"\r\n    ) {\r\n      is_recurring = \"no\";\r\n    }\r\n    const dataArray = {\r\n      merchantData: merchantDataResult,\r\n      userid: userData.id,\r\n      payment_status: \"cancel\",\r\n      is_recurring: is_recurring,\r\n      is_active: \"false\",\r\n      coursesData: cartData,\r\n      uuid: uuid\r\n    };\r\n\r\n    //allMerchantData\r\n    axios\r\n      .post(\"common/save-subscription\", dataArray)\r\n      .then((response) => {\r\n        if (response) {\r\n          //if(response.data.message === \"Error while saving.\") {\r\n          toast.success(\"Payment Cancelled!\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n          });\r\n          dispatch(clearCart());\r\n          //}\r\n\r\n          //navigate('/login');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n          toast.error(\"Payment Failed!\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n          });\r\n        }\r\n      });\r\n    getMyCourses();\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Get User courses list\r\n   *\r\n   */\r\n  const getMyCourses = () => {\r\n    axios \r\n      .get(\"common/get-my-courses/\" + userData.id)\r\n      .then((response) => {\r\n        toast.dismiss();\r\n\r\n        if (response.data) {\r\n          if (response.data.status) {\r\n            setMyCourses(response.data.data); \r\n            console.log(\"setMyCourses#######***** \", response.data.data);\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n          toast.error(\"Code is not available\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  \r\n  \r\n  // const generateTimestamp = () => {\r\n  //   // Get current date and time in UTC format\r\n  //   const now = new Date().toISOString().slice(0, -1);\r\n  //   // Get the timezone offset in hours and minutes\r\n  //   const offset = (new Date().getTimezoneOffset() / 60)\r\n  //     .toString()\r\n  //     .padStart(2, \"0\");\r\n  //   // Construct the timestamp string\r\n  //   const timestamp = `${now}${offset > 0 ? \"-\" : \"+\"}${Math.abs(offset)\r\n  //     .toString()\r\n  //     .padStart(2, \"0\")}:00`;\r\n  //   return timestamp;\r\n  // }\r\n\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Cancel course by user\r\n   *\r\n   */\r\n  const handleCancelClick = async (merchantData, orderId) => {\r\n    const merchant_data = JSON.parse(merchantData);\r\n        const token = merchant_data.token;\r\n        const merchantId = merchant_data.merchant_id;\r\n        const signature = merchant_data.signature;\r\n\r\n        const reqData = {\r\n          token: token,\r\n          merchantId: merchantId,\r\n          signature: signature,\r\n        }\r\n        console.log(\"reqData\", reqData);\r\n    axios\r\n    .post(\"common/cancel-payfast-payment\", reqData)\r\n    .then((response) => {\r\n        toast.dismiss();\r\n\r\n        if (response.data && response.data.status) {\r\n            console.log(\"Cancel response data:\", response.data.data);\r\n            cancelCourseByUser(orderId);\r\n            toast.success(\"Payment cancelled.\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n            });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n            toast.error(\"Error in cancellation.\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n            });\r\n        }\r\n    });\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Subscription cancel by user\r\n   *\r\n   */\r\n  const cancelCourseByUser = (orderId) => {\r\n    axios\r\n        .put(\"common/cancel-course/\" + orderId)\r\n        .then((response) => {\r\n            toast.dismiss();\r\n\r\n            if (response.data && response.data.status) {\r\n                console.log(\"Cancel response data:\", response.data.data);\r\n                getMyCourses();\r\n                toast.success(\"Payment cancelled.\", {\r\n                    position: \"top-center\",\r\n                    autoClose: 3000,\r\n                });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                toast.error(\"Code is not available\", {\r\n                    position: \"top-center\",\r\n                    autoClose: 3000,\r\n                });\r\n            }\r\n        });\r\n};\r\n\r\nconst paymentDueToAmbassador = () => {\r\n  axios.post(`common/payment-due-this-month`, { userId: userInfo.id })\r\n  .then(response => {\r\n      if (response.data.status) {\r\n          toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n              setPaymentDueThisMonth(response.data.data);\r\n              console.log(\"paymentDueToAmbassador response\", response.data.data)\r\n      } \r\n    }).catch(error => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n            toast.error(error.response.data.message, { autoClose: 3000 });\r\n        }\r\n        console.log(error);\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"hvg__page_banner\">\r\n        <div className=\"banner-thumnail\">\r\n          <img src={banner} alt=\"\" />\r\n        </div>\r\n        <div className=\"banner-container\">\r\n          <div className=\"container\">\r\n            <div className=\"banner-content\">\r\n              <div className=\"banner-heading col-md-6\">\r\n                <div className=\"row\">\r\n                  <h1>Agent / Ambassador Dashboard</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"hvg__main_container\">\r\n        <div className=\"container\">\r\n          <div className=\"card welcome_user_card mb-4\">\r\n            <div className=\"card-body\">\r\n              <p className=\"mb-0\">\r\n                Welcome to, <strong>{userInfo.name}</strong>{\" \"}\r\n                <span className=\"user_icon\">\r\n                  <i className=\"far fa-smile\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card welcome_user_card mb-4\">\r\n            <div className=\"card-body\">\r\n            {paymentDueThisMonth && paymentDueThisMonth.map((user) => {\r\n              return <>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <p className=\"col-4 mb-0\">\r\n                  Referral Code: <strong>{referralCode}</strong>\r\n                  </p>\r\n                  <p className=\"col-4 mb-0\">\r\n                    Referral Count: <strong>{user.referral_count ? user.referral_count : 'N/A'}</strong>\r\n                  </p>\r\n                  <p className=\"col-4 mb-0\">\r\n                    Due amount: <strong>{user.due_amount ? `R${user.due_amount}` : 'N/A'}</strong>\r\n                  </p>\r\n                </div>\r\n                </div>\r\n              </>\r\n            })}\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"hvg__card_section mb-4 \">\r\n            <div className=\"row d-flex \">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h4>Total Monthly Payouts (Last 4 months)</h4>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"table-pie-image mt-2\">\r\n                      <img src={barChart} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"amb-btn mt-4\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary btn-color bt-size\"\r\n                      >\r\n                        View All Payouts\r\n                        <span className=\"arrow-btn\">\r\n                          <img src={solarArrowUpBroken} alt=\"\" />\r\n                        </span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h4>Top selling course packages</h4>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"top_seller_package\">\r\n                      <div className=\"top_seller_item\">\r\n                        <div className=\"ts_col ts_label\">Earnings to date</div>\r\n                        <div className=\"ts_col ts_value\">R200,00</div>\r\n                      </div>\r\n                      <div className=\"top_seller_item\">\r\n                        <div className=\"ts_col ts_label\">Earnings to date</div>\r\n                        <div className=\"ts_col ts_value\">R200,00</div>\r\n                      </div>\r\n                      <div className=\"amb-btn mt-4 mb-4\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary btn-color bt-size\"\r\n                        >\r\n                          Update my profile\r\n                          <span className=\"arrow-btn\">\r\n                            <img src={solarArrowUpBroken} alt=\"\" />\r\n                          </span>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"hvg__card_section mb-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h4>My Courses</h4>\r\n                <p className=\"mb-0\">You are currently enrolled in..</p>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table_view_panel table-responsive-sm\">\r\n                <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Course Name</th>\r\n            <th scope=\"col\">Start date (MM/DD/YYYY)</th>\r\n            <th scope=\"col\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentItems.length > 0 ? (\r\n            currentItems.map((item, i) => (\r\n              <tr key={i}>\r\n                <th scope=\"row\">{item.course_title}</th>\r\n                <td>{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-color bt-size\"\r\n                    // onClick={() => handleCancelClick(item.merchantData, item._id)}\r\n                    onClick={() => cancelCourseByUser(item._id)}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"3\">No data available</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"ambassador_myreport_btn_ft\">\r\n        <button\r\n        className=\"btn btn-primary btn-color bt-size\" \r\n        onClick={prevPage} disabled={currentPage === 1}>\r\n          Previous\r\n        </button>\r\n        <button\r\n        className=\"btn btn-primary btn-color bt-size\" \r\n        onClick={nextPage} disabled={indexOfLastItem >= myCourses.length}>\r\n          Next\r\n        </button>\r\n      </div>\r\n                </div>\r\n\r\n                <div className=\"amb-btn\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-color bt-size\"\r\n                    onClick={() => handleCourses()}\r\n                  >\r\n                    Go to courses{\" \"}\r\n                    <span className=\"arrow-btn\">\r\n                      <img src={solarArrowUpBroken} alt=\"\" />\r\n                    </span>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-color bt-size\"\r\n                    onClick={() => handleOrderHistory()}\r\n                  >\r\n                    View order history{\" \"}\r\n                    <span className=\"arrow-btn\">\r\n                      <img src={solarArrowUpBroken} alt=\"\" />\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n         <Reports userId={userData}/>\r\n\r\n          <div className=\"hvg__card_section mb-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h4>Referrals this month</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table_view_panel table-responsive-sm\">\r\n                  <table className=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Date of sign up</th>\r\n                        <th scope=\"col\">Date of sign up</th>\r\n                        <th scope=\"col\">Current Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Mark</td>\r\n                        <td>Otto</td>\r\n                        <td>\r\n                          <span className=\"badge badge-success\">Active</span>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Mark</td>\r\n                        <td>Otto</td>\r\n                        <td>\r\n                          <span className=\"badge badge-success\">Banned</span>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row\">3</th>\r\n                        <td>Mark</td>\r\n                        <td>Otto</td>\r\n                        <td>\r\n                          <span className=\"badge badge-danger\">\r\n                            Subscription failed\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"amb-btn mt-4\">\r\n                  <h4 className=\"mb-3\">Detailed reports</h4>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-color bt-size\"\r\n                  >\r\n                    Choose report\r\n                    <span className=\"arrow-btn\">\r\n                      <img src={solarArrowUpBroken} alt=\"\" />\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","styleClass","children","_jsx","className","concat","title","topMargin","TopSideButtons","_jsxs","Subtitle","Reports","userId","reportTitleAndUrl","url","reportApiUrl","setReportApiUrl","useState","defaultedSubscriptionPaymentofsubscriber","setDefaultedSubscriptionPaymentofsubscriber","myActiveReferral","setActiveReferral","myInactiveReferral","setInactiveReferral","index","setIndex","apiUrl","useEffect","firstRenderReport","toast","configure","axios","post","id","then","response","data","status","success","message","position","autoClose","console","log","catch","error","dismiss","Formik","initialValues","start_date","end_date","report_type","onSubmit","values","_ref3","resetForm","handleSubmit","_ref2","urls","_ref4","Form","htmlFor","Field","name","type","ErrorMessage","component","as","value","onClick","handleResetButton","map","length","user","firstname","surname","payment_status","referral_used_date","Date","toLocaleDateString","referral_status","_Fragment","Dashboard","userInfo","JSON","parse","localStorage","getItem","location","useLocation","cancellationStatus","setCancellationStatus","myCourses","setMyCourses","userData","dispatch","useDispatch","cart","useSelector","state","cartData","navigate","useNavigate","referralCode","setReferralCode","paymentDueThisMonth","setPaymentDueThisMonth","isLoading","setIsLoading","setError","referral","sessionStorage","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","tmp","pathname","lastIndexOf","paymentSuccess","cancelPayment","getMyCourses","getReferralCode","paymentDueToAmbassador","dataArray","userid","referral_code","async","forEach","item","i","merchantData","subscriptionId","uuid","merchantDataResult","replace","is_recurring","is_active","coursesData","clearCart","setItem","get","cancelCourseByUser","orderId","put","Header","src","banner","alt","referral_count","due_amount","barChart","solarArrowUpBroken","scope","course_title","createdAt","_id","colSpan","prevPage","disabled","nextPage","Footer"],"sourceRoot":""}
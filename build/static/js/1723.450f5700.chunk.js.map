{"version":3,"file":"static/js/1723.450f5700.chunk.js","mappings":"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","sources":["containers/ambessador/Reports.jsx","containers/ambessador/Dashboard.jsx","validation-schemas/ReportSchema.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Formik, Form, ErrorMessage, Field, resetForm } from 'formik';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport ReportSchema from \"../../validation-schemas/ReportSchema\";\r\n\r\nexport const Reports = ({referral_code, userId}) => {\r\n    const reportTitleAndUrl = [\r\n        { title: \"Defaulted Subscription Payment of Subscribers\", url: \"defaulted-subscription-paymentof-subscriber\" },\r\n        { title: \"Subscription Cancelled by Subscribers\", url: \"subscription-cancelledby-subscriber\" },\r\n        { title: \"My Active Referrals\", url: \"my-active-referral\" },\r\n        { title: \"My Inactive Referrals\", url: \"my-inactive-referral\" },\r\n        { title: \"Payments due\", url: \"payment-due\" },\r\n    ];\r\n\r\n    const reportTableHeader = [\r\n        [\"Referral (Subscriber) First Name\", \"Referral (Subscriber) Last Name\", \"Payment Failure Reason\"],\r\n        [\"Subscriber First Name\", \"Subscriber Last Name\", \"Date of HVG subscription Cancellation\"],\r\n        [\"Referral (Subscriber) First Name\", \"Referral (Subscriber) Last Name\", \"Date of use of referral code\", \"Referral Status (by Subscriber)\"],\r\n        [\"Referral (Subscriber) First Name\", \"Referral (Subscriber) Last Name\", \"Date of use of referral code\", \"Referral Status (by Subscriber)\"],\r\n        [\"Subscriber First Name\", \"Subscriber Last Name\", \"Ambassador Referral Code\", \"Subscriber Subscription Status\"],\r\n    ];\r\n\r\n    const [reportApiUrl, setReportApiUrl] = useState([]);\r\n    const [defaultedSubscriptionPaymentofsubscriber, setDefaultedSubscriptionPaymentofsubscriber] = useState([]);\r\n    const [myActiveReferral, setActiveReferral] = useState([]);\r\n    const [myInactiveReferral, setInactiveReferral] = useState([]);\r\n    const [subscriptionCancelledbySubscriber, setSubscriptionCancelledbySubscriber ] = useState([]);\r\n    const [paymentDue, setPaymentDue ] = useState([]);\r\n    const [payementDueAmount, setPayementDueAmount ] = useState([]);\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const apiUrl = 'defaulted-subscription-paymentof-subscriber';\r\n\r\n    useEffect(() => {\r\n        firstRenderReport();\r\n    }, []);\r\n    toast.configure();\r\n\r\n    const firstRenderReport = () => {   \r\n        setReportApiUrl(apiUrl);\r\n        axios.post(`common/${apiUrl}`, { userId: userId.id })\r\n        .then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                setDefaultedSubscriptionPaymentofsubscriber(response.data.data);\r\n                console.log(defaultedSubscriptionPaymentofsubscriber);\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n        console.log('apiUrl=' + apiUrl);\r\n    }\r\n\r\n    const handleSubmit = (values, { resetForm }) => {\r\n        console.log(values);\r\n        setIndex(values.report_type);\r\n        const apiUrl = reportTitleAndUrl[values.report_type].url;\r\n        var urls = apiUrl;\r\n        setReportApiUrl(apiUrl);\r\n        console.log(\"API url:\", apiUrl);\r\n\r\n        if (values.start_date) {\r\n            urls += '/' + values.start_date;\r\n        }\r\n        if (values.end_date) {\r\n            urls += '/' + values.end_date;\r\n        }\r\n\r\n        axios.post(`common/${urls}`, { userId: userId.id, referral_code: referral_code })\r\n        .then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'my-active-referral') {\r\n                    setActiveReferral(response.data.data);\r\n                }\r\n                if (apiUrl === 'my-inactive-referral') {\r\n                    setInactiveReferral(response.data.data);\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-subscriber') {\r\n                    setSubscriptionCancelledbySubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'payment-due') {\r\n                    setPaymentDue(response.data.data);\r\n                    const paymentDueData = response.data.data;\r\n                    const countActiveStatus = paymentDueData.filter(subscriber => subscriber.referral_status === \"Active\").length;\r\n                    const payement_due_amount = countActiveStatus * 5;\r\n                    setPayementDueAmount(payement_due_amount);\r\n                    console.log('paymentDue', response.data.data);\r\n                }\r\n            } else {\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber('');\r\n                }\r\n                if (apiUrl === 'my-active-referral') {\r\n                    setActiveReferral('');\r\n                }\r\n                if (apiUrl === 'my-inactive-referral') {\r\n                    setInactiveReferral('');\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-subscriber') {\r\n                    setSubscriptionCancelledbySubscriber('');\r\n                }\r\n                if (apiUrl === 'payment-due') {\r\n                    setPaymentDue('');\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n\r\n    const handleResetButton = (resetForm) => {\r\n        resetForm({\r\n            values: {\r\n                start_date: '',\r\n                end_date: '',\r\n                report_type: ''\r\n            }\r\n        });\r\n        const apiUrl = reportTitleAndUrl[index].url;\r\n        setReportApiUrl(apiUrl);\r\n\r\n        axios.post(`common/${apiUrl}`, { userId: userId.id })\r\n        .then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'my-active-referral') {\r\n                    setActiveReferral(response.data.data);\r\n                }\r\n                if (apiUrl === 'my-inactive-referral') {\r\n                    setInactiveReferral(response.data.data);\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-subscriber') {\r\n                    setSubscriptionCancelledbySubscriber(response.data.data);\r\n                }\r\n                if (apiUrl === 'payment-due') {\r\n                    setPaymentDue(response.data.data);\r\n                }\r\n            } else {\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    setDefaultedSubscriptionPaymentofsubscriber('');\r\n                }\r\n                if (apiUrl === 'my-active-referral') {\r\n                    setActiveReferral('');\r\n                }\r\n                if (apiUrl === 'my-inactive-referral') {\r\n                    setInactiveReferral('');\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-subscriber') {\r\n                    setSubscriptionCancelledbySubscriber('');\r\n                }\r\n                if (apiUrl === 'payment-due') {\r\n                    setPaymentDue('');\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n    };\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n         <div className=\"hvg__card_section mb-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h4>Ambassador Reports</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table_view_panel table-responsive-sm\">\r\n\r\n                {/* report section */}\r\n                <div className=\"bg-zinc-50 px-3 py-3 rounded-xl bg-white shadow-mx border border-zinc-200\">\r\n                            <div className=\"divider mt-2\"></div>\r\n                            <div className=\"\">\r\n                                <div className=\"flex w-[100%] align-center\">\r\n                                    <Formik\r\n                                        initialValues={{\r\n                                            start_date: '',\r\n                                            end_date: '',\r\n                                            report_type: null\r\n                                        }} \r\n                                        validationSchema={ReportSchema}\r\n\r\n                                        // onSubmit={(values, { resetForm }) => {\r\n                                        //     handleSubmit(values, { resetForm });\r\n                                        // }}\r\n                                        onSubmit={(values, { resetForm }) => {\r\n                                            if(values.end_date){\r\n                                                const endDate = new Date(values.end_date);\r\n                                                endDate.setDate(endDate.getDate() + 1);\r\n                                                const adjustedValues = { ...values, end_date: endDate.toISOString().slice(0, 10) };\r\n                                                handleSubmit(adjustedValues, { resetForm });\r\n                                            } else{\r\n                                                handleSubmit(values, { resetForm });\r\n                                            }\r\n\r\n                                        }}\r\n                                    >\r\n                                        {({ resetForm }) => (\r\n                                        <Form className=\"flex w-[100%] justify-between align-center py-3 rounded-sl bg-base-100 rounded px-2\">\r\n                                            <div className='container'>\r\n                                            <div className='row ambassador_reports_search_row'>\r\n                                            <div className=\"flex flex-col col-3\">\r\n                                                <label htmlFor=\"start_date\">Start Date: </label><br />\r\n                                                <Field name=\"start_date\" type=\"date\" className=\"form-control input input-bordered w-full max-w-xs\" />\r\n                                                <ErrorMessage name=\"start_date\" component=\"div\" className=\"text-danger text-sm\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"flex flex-col col-3\">\r\n                                                <label htmlFor=\"end_date\">End Date: </label><br />\r\n                                                <Field name=\"end_date\" type=\"date\" className=\"form-control input input-bordered w-full max-w-xs\" />\r\n                                                <ErrorMessage name=\"end_date\" component=\"div\" className=\"text-danger text-sm\" />\r\n                                            </div>\r\n                                            <div className=\"flex flex-col col-6\">\r\n                                                <label htmlFor=\"report_type\">Report Type: </label>\r\n                                                <Field as=\"select\" name=\"report_type\" id=\"report_type\" className=\"form-control dropdown-content z-[1] menu p-2 shadow bg-base-100 w-64\">\r\n                                                    <option value=\"\">Select an option</option>\r\n                                                    <option value={0}> Defaulted Subscription Payments of Subscribers</option>\r\n                                                    <option value={1}> Subscription Cancelled by Subscribers</option>\r\n                                                    <option value={2}> My Active Referrals</option>\r\n                                                    <option value={3}> My Inactive Referrals</option>\r\n                                                    <option value={4}> Payments due to ambassador</option>\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"report_type\" component=\"div\" className=\"text-danger text-sm\" />\r\n                                            </div>\r\n                                            </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"flex align-center justify-between mt-6 ambassador_reports_search_ft\">\r\n                                                <button \r\n                                                type=\"submit\" \r\n                                                className=\"btn btn-primary btn-color bt-size\"\r\n                                                >Search</button>\r\n                                                <button \r\n                                                type=\"button\" \r\n                                                className=\"btn btn-primary btn-color bt-size\"\r\n                                                 onClick={() => handleResetButton(resetForm)}\r\n                                                 >Reset</button>\r\n\r\n                                                {/* <button type=\"submit\" className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\">Export</button> */}\r\n                                            </div>\r\n                                        </Form>\r\n                                         )}\r\n                                    </Formik>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <strong>{reportTitleAndUrl[index]?.title || \"\"}</strong>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <div className=\"table_view_panel table-responsive-sm\">\r\n                                    <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                            <tr>\r\n                                                {reportTableHeader[index].map((data, index) => (\r\n                                                    <th key={index}>{data}</th>\r\n                                                ))}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {reportApiUrl === 'defaulted-subscription-paymentof-subscriber' && defaultedSubscriptionPaymentofsubscriber.length > 0 && defaultedSubscriptionPaymentofsubscriber.map((user, index) => {\r\n                                                    return (\r\n                                                        <tr key={index}>\r\n                                                            <td>{user.Subscriber_firstname ? user.Subscriber_firstname : 'N/A'} </td>\r\n                                                            <td>{user.Subscriber_lastname ? user.Subscriber_lastname : 'N/A'}</td>\r\n                                                            <td>{user.payment_status ? 'Payment failed' : 'N/A'}</td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n\r\n\r\n                                            {reportApiUrl === 'my-active-referral' && myActiveReferral.length > 0 && myActiveReferral.map((user, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td>{user.Subscriber_firstname ? user.Subscriber_firstname : 'N/A'} </td>\r\n                                                        <td>{user.Subscriber_lastname ? user.Subscriber_lastname : 'N/A'}</td>\r\n                                                        <td>{user.referral_used_date ? new Date(user.referral_used_date).toLocaleDateString() : 'N/A'}</td>\r\n                                                        <td>{user.referral_status ? user.referral_status : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                            }\r\n\r\n                                            {reportApiUrl === 'my-inactive-referral' && myInactiveReferral && myInactiveReferral.map((user, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{user.Subscriber_firstname ? user.Subscriber_firstname : 'N/A'} </td>\r\n                                                        <td>{user.Subscriber_lastname ? user.Subscriber_lastname : 'N/A'}</td>\r\n                                                        <td>{user.referral_used_date ? new Date(user.referral_used_date).toLocaleDateString() : 'N/A'}</td>\r\n                                                        <td>{user.referral_status ? user.referral_status : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                           \r\n                                            {reportApiUrl === 'subscription-cancelledby-subscriber' && subscriptionCancelledbySubscriber && subscriptionCancelledbySubscriber.map((user, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{user.Subscriber_firstname ? user.Subscriber_firstname : 'N/A'} </td>\r\n                                                        <td>{user.Subscriber_lastname ? user.Subscriber_lastname : 'N/A'}</td>\r\n                                                        <td>{user.cancellation_date ? new Date(user.cancellation_date).toLocaleDateString() : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n                                            {reportApiUrl === 'payment-due' && paymentDue && (\r\n                                                <>\r\n                                                    {paymentDue.map((user, index) => (\r\n                                                        <tr key={index}>\r\n                                                            <td>{user.Subscriber_firstname ? user.Subscriber_firstname : 'N/A'}</td>\r\n                                                            <td>{user.Subscriber_lastname ? user.Subscriber_lastname : 'N/A'}</td>\r\n                                                            <td>{user.referral_code ? user.referral_code : 'N/A'}</td>\r\n                                                            <td>{user.referral_status ? user.referral_status : 'N/A'}</td>\r\n                                                        </tr>\r\n                                                    ))}\r\n                                                    <tr>\r\n                                                        <td colSpan=\"3\" style={{ textAlign: 'right' }}>Total Amount Due:  </td>\r\n                                                        <td>{payementDueAmount ? payementDueAmount : 0 }</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            )}\r\n                                            {/* {reportApiUrl === 'payment-due' && paymentDue && paymentDue.map((user, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{user.Subscriber_firstname ? user.Subscriber_firstname : 'N/A'} </td>\r\n                                                        <td>{user.Subscriber_lastname ? user.Subscriber_lastname : 'N/A'}</td>\r\n                                                        <td>{user.referral_code ? user.referral_code : 'N/A'}</td>\r\n                                                        <td>{user.referral_status ? user.referral_status : 'N/A'}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })} */}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport banner from \"../../assets/images/Banner.png\";\r\nimport solarArrowUpBroken from \"../../assets/images/solar_arrow-up-broken.svg\";\r\nimport barChart from \"../../assets/images/The-bar-chart-showing-the-monthly-refractivity-for-Abia-state1.svg\";\r\nimport Header from \"../../components/common/Header\";\r\nimport Footer from \"../../components/common/Footer\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { clearCart } from \"../../redux/cartSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Reports } from \"./Reports\";\r\n\r\nconst Dashboard = () => {\r\n  const userInfo = JSON.parse(localStorage.getItem(\"authInfo\"))\r\n    ? JSON.parse(localStorage.getItem(\"authInfo\"))\r\n    : null;\r\n  const location = useLocation();\r\n  const [cancellationStatus, setCancellationStatus] = useState(null);\r\n  let [myCourses, setMyCourses] = useState(\"\");\r\n  const userData = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  var cartData = {};\r\n  const navigate = useNavigate();\r\n  let [referralCode, setReferralCode] = useState(false);\r\n  let [referralsThisMonth, setReferralsThisMonth] = useState(false);\r\n  let [paymentDueThisMonth, setPaymentDueThisMonth] = useState([]);\r\n  const [userProfileData, setUserProfileData] = useState([]);\r\n\r\n  // ****************************\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // ********************************\r\n  const referral = sessionStorage.getItem(\"referralCode\");\r\n  // ********************************\r\n  //My Courses pagination \r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = myCourses.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const nextPage = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  // ********************************\r\n  useEffect(() => {\r\n    let tmp = location.pathname.slice(\r\n      location.pathname.lastIndexOf(\"/\"),\r\n      location.pathname.length\r\n    );\r\n    console.log(\"pathname=\", tmp);\r\n    if (tmp === \"/success\") {\r\n      paymentSuccess();\r\n    }\r\n    if (tmp === \"/cancel\") {\r\n      cancelPayment();\r\n    }\r\n    getMyCourses();\r\n    getReferralCode();\r\n    getReferralsThisMonth();\r\n    paymentDueToAmbassador();\r\n    getUserDetails();\r\n  }, []);\r\n  toast.configure();\r\n\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  const getReferralCode = () => {\r\n    //ex: HG00123\r\n    const dataArray = {\r\n      userid: userInfo.id,\r\n    };\r\n    axios\r\n      .post(\"common/fetch-ambassador-code\", dataArray)\r\n      .then((response) => {\r\n        toast.dismiss();\r\n\r\n        if (response.data.status) {\r\n          console.log(\"referral_code=\", response.data.data.referral_code);\r\n          setReferralCode(response.data.data.referral_code);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Handle courses redirects\r\n   *\r\n   */\r\n  const handleCourses = () => {\r\n    navigate(\"/learner/my-courses\");\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Handle order history\r\n   *\r\n   */\r\n  const handleOrderHistory = () => {\r\n    navigate(\"/learner/order-history\"); \r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Handle payment success from payfast\r\n   *\r\n   */\r\n  const paymentSuccess = async (response) => {\r\n    cart.forEach((item, i) => {\r\n      cartData[i] = item;\r\n    });\r\n    console.log(\"cartData=\", cartData);\r\n    let merchantData = localStorage.getItem(\"merchantData\");\r\n    let subscriptionId = localStorage.getItem(\"subscriptionId\");\r\n    let uuid = localStorage.getItem(\"uuid\");\r\n    let merchantDataResult = merchantData ? JSON.parse(merchantData) : \"\";\r\n    uuid = uuid.replace(/^\"(.*)\"$/, '$1');\r\n\r\n    if (merchantDataResult === \"\") {\r\n      return;\r\n    }\r\n    let is_recurring = \"\";\r\n    if (\r\n      merchantDataResult[\"item_description\"] ===\r\n      \"Order for Hign Vista Subscription\"\r\n    ) {\r\n      is_recurring = \"yes\";\r\n    }\r\n    if (\r\n      merchantDataResult[\"item_description\"] === \"Order for one off payment\"\r\n    ) {\r\n      is_recurring = \"no\";\r\n    }\r\n    const dataArray = {\r\n      merchantData: merchantDataResult,\r\n      userid: userData.id,\r\n      payment_status: \"success\",\r\n      is_recurring: is_recurring,\r\n      is_active: \"true\",\r\n      coursesData: cartData,\r\n      uuid: uuid,\r\n      id:subscriptionId,\r\n      referralCode: referral,\r\n    }; \r\n    console.log(\"Updated dataArray\", dataArray)\r\n\r\n    axios\r\n      .post(\"common/save-subscription\", dataArray)\r\n      .then((response) => {\r\n        if (response) {\r\n          console.log(\"Save subscription: \", response)\r\n          toast.success(\"Payment Successful!\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n          });\r\n          dispatch(clearCart());\r\n\r\n          //navigate('/login');\r\n        }\r\n        // localStorage.setItem(\"merchantData\", \"\");\r\n      })\r\n      .catch((error) => {\r\n        toast.dismiss();\r\n        localStorage.setItem(\"merchantData\", \"\");\r\n        if (error.response) {\r\n          toast.error(\"Payment Failed!\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n          });\r\n        }\r\n      });\r\n    getMyCourses();\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Get cancel payment data from payfast\r\n   *\r\n   */\r\n  const cancelPayment = (response) => {\r\n    cart.forEach((item, i) => {\r\n      cartData[i] = item;\r\n    });\r\n    console.log(\"cancel payment=\", response);\r\n    let merchantData = localStorage.getItem(\"merchantData\");\r\n    let uuid = localStorage.getItem(\"uuid\");\r\n    uuid = uuid.replace(/^\"(.*)\"$/, '$1');\r\n    let merchantDataResult = merchantData ? JSON.parse(merchantData) : \"\";\r\n    console.log(\"merchantDataResult=\", merchantDataResult);\r\n    let is_recurring = \"\";\r\n    if (merchantDataResult === \"\") {\r\n      return;\r\n    }\r\n    if (\r\n      merchantDataResult[\"item_description\"] ===\r\n      \"Order for Hign Vista Subscription\"\r\n    ) {\r\n      is_recurring = \"yes\";\r\n    }\r\n    if (\r\n      merchantDataResult[\"item_description\"] === \"Order for one off payment\"\r\n    ) {\r\n      is_recurring = \"no\";\r\n    }\r\n    const dataArray = {\r\n      merchantData: merchantDataResult,\r\n      userid: userData.id,\r\n      payment_status: \"cancel\",\r\n      is_recurring: is_recurring,\r\n      is_active: \"false\",\r\n      coursesData: cartData,\r\n      uuid: uuid\r\n    };\r\n\r\n    axios\r\n      .post(\"common/save-subscription\", dataArray)\r\n      .then((response) => {\r\n        if (response) {\r\n          //if(response.data.message === \"Error while saving.\") {\r\n          toast.success(\"Payment Cancelled!\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n          });\r\n          dispatch(clearCart());\r\n          //}\r\n\r\n          //navigate('/login');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n          toast.error(\"Payment Failed!\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n          });\r\n        }\r\n      });\r\n    getMyCourses();\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Get User profile details\r\n   *\r\n   */\r\n  const getUserDetails = () => {\r\n    axios.get('user/get-profile-details/'+ userData.id).then(response => {\r\n            if (response.data) {\r\n                if(response.data.status) {\r\n                  setUserProfileData(response.data.data[0]);\r\n                    console.log(\"getUserDetails Response Data: \",response.data.data[0]);\r\n                }\r\n            }\r\n        }).catch(error => {\r\n            if (error.response) {\r\n              console.log(\"getUserDetails eror: \",  error.message);\r\n            }\r\n        })\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Get User courses list\r\n   *\r\n   */\r\n  const getMyCourses = () => {\r\n    axios \r\n      .get(\"common/get-my-courses/\" + userData.id)\r\n      .then((response) => {\r\n        toast.dismiss();\r\n\r\n        if (response.data) {\r\n          if (response.data.status) {\r\n            setMyCourses(response.data.data); \r\n            console.log(\"setMyCourses#######***** \", response.data.data);\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n          toast.error(\"Code is not available\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  \r\n  \r\n  // const generateTimestamp = () => {\r\n  //   // Get current date and time in UTC format\r\n  //   const now = new Date().toISOString().slice(0, -1);\r\n  //   // Get the timezone offset in hours and minutes\r\n  //   const offset = (new Date().getTimezoneOffset() / 60)\r\n  //     .toString()\r\n  //     .padStart(2, \"0\");\r\n  //   // Construct the timestamp string\r\n  //   const timestamp = `${now}${offset > 0 ? \"-\" : \"+\"}${Math.abs(offset)\r\n  //     .toString()\r\n  //     .padStart(2, \"0\")}:00`;\r\n  //   return timestamp;\r\n  // }\r\n\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Get all Referrals this month\r\n   *\r\n   */\r\n  const getReferralsThisMonth = () => {\r\n    axios \r\n      .get(\"common/get-referrals-this-month/\" + userData.id)\r\n      .then((response) => {\r\n        toast.dismiss();\r\n\r\n        if (response.data) {\r\n          if (response.data.status) {\r\n            setReferralsThisMonth(response.data.data); \r\n            console.log(\"getReferralsThisMonth response\", response.data.data);\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n          toast.error(\"Code is not available\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Cancel course by user\r\n   *\r\n   */\r\n  const handleCancelClick = async (merchantData, orderId) => {\r\n    let merchantDataData = localStorage.getItem(\"merchantData\");\r\n\r\n    const merchant_data = JSON.parse(merchantData);\r\n        const token = merchant_data.token;\r\n        const merchantId = merchant_data.merchant_id;\r\n        const signature = merchant_data.signature;\r\n\r\n        const reqData = {\r\n          token: token,\r\n          merchantId: merchantId,\r\n          signature: signature,\r\n          merchantData: merchantDataData,\r\n        }\r\n        console.log(\"reqData\", reqData);\r\n    axios\r\n    .post(\"common/cancel-payfast-payment\", reqData)\r\n    .then((response) => {\r\n        toast.dismiss();\r\n\r\n        if (response.data && response.data.status === 'success') {\r\n            console.log(\"Cancel response data:\", response.data.data);\r\n            cancelCourseByUser(orderId);\r\n            toast.success(\"Payment cancelled.\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n            });\r\n        } else {\r\n          toast.error(\"Error in cancellation.\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n        });\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n            toast.error(\"Error in cancellation.\", {\r\n                position: \"top-center\",\r\n                autoClose: 3000,\r\n            });\r\n        }\r\n    });\r\n  };\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  /**\r\n   * Subscription cancel by user\r\n   *\r\n   */\r\n  const cancelCourseByUser = (orderId) => {\r\n    axios\r\n        .put(\"common/cancel-course/\" + orderId)\r\n        .then((response) => {\r\n            toast.dismiss();\r\n\r\n            if (response.data && response.data.status) {\r\n                console.log(\"Cancel response data:\", response.data.data);\r\n                getMyCourses();\r\n                handleMoodleUserSuspension();\r\n                toast.success(\"Payment cancelled.\", {\r\n                    position: \"top-center\",\r\n                    autoClose: 3000,\r\n                });\r\n                navigate('/signup');\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                toast.error(\"Code is not available\", {\r\n                    position: \"top-center\",\r\n                    autoClose: 3000,\r\n                });\r\n            }\r\n        });\r\n};\r\n\r\nconst paymentDueToAmbassador = () => {\r\n  axios.post(`common/payment-due`, { referral_code: referralCode })\r\n  .then(response => {\r\n      if (response.data.status) {\r\n          toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n              setPaymentDueThisMonth(response.data.data);\r\n              console.log(\"paymentDueToAmbassador response\", response.data.data)\r\n      } \r\n    }).catch(error => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n            toast.error(error.response.data.message, { autoClose: 3000 });\r\n        }\r\n        console.log(error);\r\n    })\r\n  }\r\n\r\n\r\n  const handleMoodleUserSuspension = async () => {\r\n    console.log(\" userProfileData.moodle_login_id\",  userProfileData.moodle_login_id)\r\n    const MOODLE_URL = process.env.REACT_APP_MOODLE_COURSES_URL;\r\n    const MOODLE_TOKEN = process.env.REACT_APP_MOODLE_TOKEN;\r\n    const MOODLE_GET_FUNCTION = 'core_user_update_users';\r\n  \r\n    try {\r\n      const response = await axios.post(MOODLE_URL, null, {\r\n        params: { \r\n          wstoken: MOODLE_TOKEN,\r\n          moodlewsrestformat: 'json',\r\n          wsfunction: MOODLE_GET_FUNCTION,\r\n          users: [\r\n            {\r\n              id: userProfileData.moodle_login_id,\r\n              suspended: 0,    //1 to suspend, 0 to not suspend(active)\r\n              // firstname: 'Testing'\r\n            },\r\n          ],\r\n        },\r\n      });\r\n  \r\n      console.log('User data:', response.data);\r\n    } catch (error) {\r\n      console.error('Error creating user:', error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"hvg__page_banner\">\r\n        <div className=\"banner-thumnail\">\r\n          <img src={banner} alt=\"\" />\r\n        </div>\r\n        <div className=\"banner-container\">\r\n          <div className=\"container\">\r\n            <div className=\"banner-content\">\r\n              <div className=\"banner-heading col-md-6\">\r\n                <div className=\"row\">\r\n                  <h1>Agent / Ambassador Dashboard</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"hvg__main_container\">\r\n        <div className=\"container\">\r\n          <div className=\"card welcome_user_card mb-4\">\r\n            <div className=\"card-body\">\r\n              <p className=\"mb-0\">\r\n                Welcome, <strong>{userData.name}</strong>{\" \"}\r\n                <span className=\"user_icon\">\r\n                  <i className=\"far fa-smile\"></i>\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card welcome_user_card mb-4\">\r\n            <div className=\"card-body\">\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <p className=\"col-4 mb-0\">\r\n                  Referral Code: <strong>{referralCode}</strong>\r\n                  </p>\r\n                  <p className=\"col-4 mb-0\">\r\n                    Referral Count: <strong>{paymentDueThisMonth.referral_count ? paymentDueThisMonth.referral_count : '0'}</strong>\r\n                  </p>\r\n                  <p className=\"col-4 mb-0\">\r\n                    Due amount: <strong>{paymentDueThisMonth.due_amount ? `R${paymentDueThisMonth.due_amount}` : '0'}</strong>\r\n                  </p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"hvg__card_section mb-4 \">\r\n            <div className=\"row d-flex \">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h4>Total Monthly Payouts (Last 4 months)</h4>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"table-pie-image mt-2\">\r\n                      <img src={barChart} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"amb-btn mt-4\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary btn-color bt-size\"\r\n                      >\r\n                        View All Payouts\r\n                        <span className=\"arrow-btn\">\r\n                          <img src={solarArrowUpBroken} alt=\"\" />\r\n                        </span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h4>Top selling course packages</h4>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"top_seller_package\">\r\n                      <div className=\"top_seller_item\">\r\n                        <div className=\"ts_col ts_label\">Earnings to date</div>\r\n                        <div className=\"ts_col ts_value\">R200,00</div>\r\n                      </div>\r\n                      <div className=\"top_seller_item\">\r\n                        <div className=\"ts_col ts_label\">Earnings to date</div>\r\n                        <div className=\"ts_col ts_value\">R200,00</div>\r\n                      </div>\r\n                      <div className=\"amb-btn mt-4 mb-4\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary btn-color bt-size\"\r\n                        >\r\n                          Update my profile\r\n                          <span className=\"arrow-btn\">\r\n                            <img src={solarArrowUpBroken} alt=\"\" />\r\n                          </span>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"hvg__card_section mb-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h4>My Courses</h4>\r\n                <p className=\"mb-0\">You are currently enrolled in..</p>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table_view_panel table-responsive-sm\">\r\n                <table className=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Index</th>\r\n                      <th scope=\"col\">Course Name</th>\r\n                      <th scope=\"col\">Start date (MM/DD/YYYY)</th>\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {currentItems.length > 0 ? (\r\n                      currentItems.map((item, i) => (\r\n                        <tr key={i}>\r\n                          <td>{i + 1 + (currentPage - 1) * itemsPerPage}</td>\r\n                          <th scope=\"row\">{item.course_title}</th>\r\n                          <td>{new Date(item.createdAt).toLocaleDateString()}</td>\r\n                          <td>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-primary btn-color bt-size-auto\"\r\n                              // onClick={() => handleCancelClick(item.merchantData, item._id)}\r\n                              onClick={() => cancelCourseByUser(item._id)}\r\n                            >\r\n                              Unsubscribe \r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr>\r\n                        <td colSpan=\"3\">No data available</td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n                <div className=\"ambassador_myreport_btn_ft\">\r\n                  <button\r\n                  className=\"btn btn-primary btn-color bt-size\" \r\n                  onClick={prevPage} disabled={currentPage === 1}>\r\n                    Previous\r\n                  </button>\r\n                  <button\r\n                  className=\"btn btn-primary btn-color bt-size\" \r\n                  onClick={nextPage} disabled={indexOfLastItem >= myCourses.length}>\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n                <div className=\"amb-btn\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-color bt-size\"\r\n                    onClick={() => handleCourses()}\r\n                  >\r\n                    Go to courses{\" \"}\r\n                    <span className=\"arrow-btn\">\r\n                      <img src={solarArrowUpBroken} alt=\"\" />\r\n                    </span>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-color bt-size\"\r\n                    onClick={() => handleOrderHistory()}\r\n                  >\r\n                    View order history{\" \"}\r\n                    <span className=\"arrow-btn\">\r\n                      <img src={solarArrowUpBroken} alt=\"\" />\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n         <Reports referral_code={referralCode} userId={userData}/>\r\n\r\n          <div className=\"hvg__card_section mb-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h4>Referrals this month</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table_view_panel table-responsive-sm\">\r\n                <table className=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Index</th>\r\n                      <th scope=\"col\">Subscriber First Name</th>\r\n                      <th scope=\"col\">Subscriber Last Name</th>\r\n                      <th scope=\"col\">Date of use of referral code</th>\r\n                      <th scope=\"col\">Referral Status (by Subscriber)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {referralsThisMonth.length > 0 ? (\r\n                      referralsThisMonth.map((item, i) => (\r\n                        <tr key={i}>\r\n                          <td>{i + 1}</td>\r\n                          <td>{item.firstname}</td>\r\n                          <td>{item.surname}</td>\r\n                          <td>{new Date(item.referral_used_date).toLocaleDateString()}</td>\r\n                          <td>\r\n                            {item.referral_status === \"Active\" ? (\r\n                                <span className=\"badge badge-success\">\r\n                                Active\r\n                                </span>\r\n                            ) : (\r\n                                <span className=\"badge badge-danger\">\r\n                                In-active\r\n                                </span>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr>\r\n                        <td colSpan=\"4\">No data available</td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n\r\n                </table>\r\n                </div>\r\n                {/* <div className=\"amb-btn mt-4\">\r\n                  <h4 className=\"mb-3\">Detailed reports</h4>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-color bt-size\"\r\n                  >\r\n                    Choose report\r\n                    <span className=\"arrow-btn\">\r\n                      <img src={solarArrowUpBroken} alt=\"\" />\r\n                    </span>\r\n                  </button>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import * as yup from 'yup';\r\n\r\nexport default yup.object().shape({\r\n  // start_date: yup.date().required('Start date is required'),\r\n  // end_date: yup.date().required('End date is required'),\r\n  report_type: yup.string().required('Report type is required'),\r\n});"],"names":["Reports","_ref","_reportTitleAndUrl$in","referral_code","userId","reportTitleAndUrl","title","url","reportApiUrl","setReportApiUrl","useState","defaultedSubscriptionPaymentofsubscriber","setDefaultedSubscriptionPaymentofsubscriber","myActiveReferral","setActiveReferral","myInactiveReferral","setInactiveReferral","subscriptionCancelledbySubscriber","setSubscriptionCancelledbySubscriber","paymentDue","setPaymentDue","payementDueAmount","setPayementDueAmount","index","setIndex","apiUrl","useEffect","firstRenderReport","toast","configure","axios","post","concat","id","then","response","data","status","success","message","position","autoClose","console","log","catch","error","dismiss","handleSubmit","values","_ref2","resetForm","report_type","urls","start_date","end_date","countActiveStatus","filter","subscriber","referral_status","length","_jsx","children","className","_jsxs","Formik","initialValues","validationSchema","ReportSchema","onSubmit","_ref3","endDate","Date","setDate","getDate","adjustedValues","toISOString","slice","_ref4","Form","htmlFor","Field","name","type","ErrorMessage","component","as","value","onClick","handleResetButton","map","user","Subscriber_firstname","Subscriber_lastname","payment_status","referral_used_date","toLocaleDateString","_Fragment","cancellation_date","colSpan","style","textAlign","Dashboard","userInfo","JSON","parse","localStorage","getItem","location","useLocation","cancellationStatus","setCancellationStatus","myCourses","setMyCourses","userData","dispatch","useDispatch","cart","useSelector","state","cartData","navigate","useNavigate","referralCode","setReferralCode","referralsThisMonth","setReferralsThisMonth","paymentDueThisMonth","setPaymentDueThisMonth","userProfileData","setUserProfileData","isLoading","setIsLoading","setError","referral","sessionStorage","currentPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","tmp","pathname","lastIndexOf","paymentSuccess","cancelPayment","getMyCourses","getReferralCode","getReferralsThisMonth","paymentDueToAmbassador","getUserDetails","dataArray","userid","async","forEach","item","i","merchantData","subscriptionId","uuid","merchantDataResult","replace","is_recurring","is_active","coursesData","clearCart","setItem","get","cancelCourseByUser","orderId","put","handleMoodleUserSuspension","moodle_login_id","process","params","wstoken","moodlewsrestformat","wsfunction","users","suspended","Header","src","banner","alt","referral_count","due_amount","barChart","solarArrowUpBroken","scope","course_title","createdAt","_id","prevPage","disabled","nextPage","firstname","surname","Footer","yup","shape","required"],"sourceRoot":""}
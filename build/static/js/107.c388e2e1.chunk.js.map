{"version":3,"file":"static/js/107.c388e2e1.chunk.js","mappings":"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","sources":["containers/admin/LandingIntro.jsx","containers/admin/Login.jsx"],"sourcesContent":["import logo from '../../assets/images/high-vista-guild.svg';\r\nimport intro from '../../assets/images/intro.png';\r\n\r\nconst LandingIntro = () => {\r\n    return(\r\n        <div className=\"hero min-h-full rounded-l-xl bg-base-200\">\r\n            <div className=\"hero-content py-12\">\r\n              <div className=\"max-w-md\">\r\n\r\n                <h1 className='text-3xl text-center font-bold '>\r\n                    Skilltech\r\n                </h1>\r\n              \r\n              {/* Importing pointers component */}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default LandingIntro","import React, { useEffect, useState } from \"react\";\r\n//import banner from '../assets/images/Banner.png';\r\n\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Header from \"../../components/admin/Header\";\r\nimport Footer from \"../../components/admin/Footer\";\r\nimport AdminLoginSchema from '../../validation-schemas/AdminLoginSchema';\r\nimport { Formik } from 'formik';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport ErrorText from \"../../components/utility/ErrorText\";\r\nimport LandingIntro from \"./LandingIntro\";\r\n\r\nconst AdminLogin = () => {\r\n    const authInfo = JSON.parse(localStorage.getItem(\"authInfo\"));\r\n    const location = useLocation();\r\n    console.log('authInfo=',authInfo);\r\n    let [loading, setLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    let [userid, setUserid] = useState(authInfo ? authInfo.id : null);\r\n    const navigate = useNavigate();\r\n    \r\n    console.log('authInfo=',authInfo);\r\n    useEffect(() => {\r\n        \r\n    }, []);\r\n    toast.configure();\r\n\r\n    /***********************************************************************/\r\n    /***********************************************************************/\r\n     \r\n    /**\r\n     * Handle after form submission\r\n     * \r\n     */\r\n    const handleSubmit = (values, { resetForm }) => {\r\n        setLoading(true);\r\n        console.log(\"handlesubmit\");\r\n        //this.dispatch(setLoading({loading: true}));\r\n        axios.post('common/signin', values).then(response => {\r\n            toast.dismiss();\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\",autoClose: 3000 });\r\n                let authInfo = {\r\n                    expTime: response.data.data.expTime,\r\n                    id: response.data.data['_id'],\r\n                    token: response.data.data.token,\r\n                    name: response.data.data.firstname +' '+response.data.data.surname,\r\n                    email: response.data.data.email,\r\n                    role: response.data.data.role,\r\n                };\r\n               \r\n                \r\n                localStorage.setItem('authInfo', JSON.stringify(authInfo));\r\n                localStorage.setItem('isLoggedIn', 1);\r\n                resetForm();\r\n                \r\n                if (response.data.data.role === 'admin') {\r\n                    navigate('/admin/admin-dashboard');\r\n                }\r\n\r\n            } else {\r\n                resetForm();\r\n                toast.error(response.data.message, { autoClose: 3000 });\r\n            }\r\n\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n        }).finally(() => {\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n            }, 300);\r\n        });\r\n    }\r\n    /***********************************************************************/\r\n    /***********************************************************************/\r\n    \r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div>\r\n                <div className=\"min-h-screen bg-base-200 flex items-center\">\r\n                    <div className=\"card mx-auto w-full max-w-5xl  shadow-xl\">\r\n                        <div className=\"grid  md:grid-cols-2 grid-cols-1  bg-base-100 rounded-xl\">\r\n                            <div className=''>\r\n                                <LandingIntro />\r\n                            </div>\r\n                            <div className='py-24 px-10'>\r\n                                <h2 className='text-2xl font-semibold mb-2 text-center'>Login</h2>\r\n                                <Formik\r\n                                    initialValues={{\r\n                                        email: '',\r\n                                        password: '',\r\n                                        //role: ''\r\n                                    }}\r\n                                    onSubmit={(values, { resetForm }) => {\r\n                                        handleSubmit(values, { resetForm });\r\n                                    }}\r\n                                    validationSchema={AdminLoginSchema}\r\n                                >\r\n                                {({ values,\r\n                                    errors,\r\n                                    touched,\r\n                                    handleChange,\r\n                                    handleBlur,\r\n                                    handleSubmit,\r\n                                    isValid,\r\n                                    isSubmitting\r\n                                }) => (\r\n                                    <form onSubmit={handleSubmit}>\r\n                                        <div className=\"mb-4\">\r\n                                            <div className=\"form-control w-full mt-4\">\r\n                                                <label className=\"label\" htmlFor=\"exampleInputEmail1\">\r\n                                                    <span className=\"label-text text-base-content\">Email address</span>\r\n                                                </label>\r\n                                                <input type=\"email\" className=\"input input-bordered w-full\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"\" name=\"email\" onChange={handleChange} onBlur={handleBlur} value={values.email} />\r\n                                                {touched.email && errors.email ? (\r\n                                                    <small className=\"text-danger\">{errors.email}</small>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <div className=\"form-control w-full mt-4\">\r\n                                                <label className=\"label\" htmlFor=\"exampleInputPassword1\">\r\n                                                    <span className=\"label-text text-base-content\">Password</span>\r\n                                                </label>\r\n                                                <input type=\"password\" name=\"password\" className=\"input input-bordered w-full\" id=\"exampleInputPassword1\" placeholder=\"\" onChange={handleChange} onBlur={handleBlur} value={values.password} />\r\n                                                {touched.password && errors.password ? (\r\n                                                    <small className=\"text-danger\">{errors.password}</small>\r\n                                                ) : null}\r\n                                            </div>    \r\n                                        </div>\r\n                                        <div className='text-right text-primary'>\r\n                                            <Link to=\"#\">\r\n                                                <span className=\"text-sm inline-block hover:text-primary hover:underline hover:cursor-pointer transition duration-200\">Forgot Password?</span>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <ErrorText styleClass=\"mt-8\">{errorMessage}</ErrorText>\r\n                                        <button type=\"submit\" className={\"btn mt-2 w-full btn-primary\" + (loading ? \" loading\" : \"\")}>Login</button>\r\n                                    </form>\r\n                                    )}\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminLogin;\r\n"],"names":["LandingIntro","_jsx","className","children","AdminLogin","authInfo","JSON","parse","localStorage","getItem","useLocation","console","log","loading","setLoading","useState","errorMessage","setErrorMessage","userid","setUserid","id","navigate","useNavigate","useEffect","toast","configure","_jsxs","_Fragment","Header","Formik","initialValues","email","password","onSubmit","values","_ref2","resetForm","handleSubmit","_ref","axios","post","then","response","dismiss","data","status","success","message","position","autoClose","expTime","token","name","firstname","surname","role","setItem","stringify","error","catch","finally","setTimeout","validationSchema","AdminLoginSchema","_ref3","errors","touched","handleChange","handleBlur","isValid","isSubmitting","htmlFor","type","placeholder","onChange","onBlur","value","Link","to","ErrorText","styleClass","Footer"],"sourceRoot":""}
{"version":3,"file":"static/js/653.890b9aa4.chunk.js","mappings":"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","sources":["components/admin/common/Subtitle.jsx","components/admin/common/TitleCard.jsx","containers/admin/Subscription.jsx"],"sourcesContent":["const Subtitle = ({styleClass, children}) => {\r\n    return(\r\n        <div className={`text-xl font-semibold ${styleClass}`}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Subtitle","import Subtitle from \"../../../components/admin/common/Subtitle\"\r\n\r\n  \r\n  const TitleCard = ({title, children, topMargin, TopSideButtons}) => {\r\n      return(\r\n          <div className={\"card w-full p-6 bg-base-100 shadow-xl \" + (topMargin || \"mt-6\")}>\r\n\r\n            {/* Title for Card */}\r\n              <Subtitle styleClass={TopSideButtons ? \"inline-block\" : \"\"}>\r\n                {title}\r\n\r\n                {/* Top side button, show only if present */}\r\n                {\r\n                    TopSideButtons && <div className=\"inline-block float-right\">{TopSideButtons}</div>\r\n                }\r\n              </Subtitle>\r\n              \r\n              <div className=\"divider mt-2\"></div>\r\n          \r\n              {/** Card Body */}\r\n              <div className='h-full w-full pb-6 bg-base-100'>\r\n                  {children}\r\n              </div>\r\n          </div>\r\n          \r\n      )\r\n  }\r\n  \r\n  \r\n  export default TitleCard","import moment from \"moment\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { showNotification } from \"../../components/admin/common/headerSlice\"\r\nimport TitleCard from \"../../components/admin/common/TitleCard\"\r\n//import { RECENT_TRANSACTIONS } from \"../../utils/dummyData\"\r\nimport { toast } from 'react-toastify';\r\nimport Nav from '../../components/admin/Nav';\r\nimport RightSidebar from '../../components/admin/common/RightSidebar';\r\nimport FunnelIcon from '@heroicons/react/24/outline/FunnelIcon'\r\nimport XMarkIcon from '@heroicons/react/24/outline/XMarkIcon'\r\nimport SearchBar from \"../../components/admin/common/SearchBar\";\r\nimport Header from \"../../components/admin/Header\";\r\nimport Footer from \"../../components/admin/Footer\";\r\nimport axios from \"axios\";\r\nimport { openModal } from '../../components/admin/common/modalSlice';\r\nimport { deleteLead, getLeadsContent,getSubscribersContent } from \"../../containers/admin/modal_slice/SubscriptionDetailsSlice\"\r\n//import { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from '../../utils/globalConstantUtil'\r\nimport { CONFIRMATION_MODAL_CLOSE_TYPES, MODAL_BODY_TYPES } from '../../components/admin/utils/globalConstantUtil';\r\n\r\n/*const TopSideButtons = ({removeFilter, applyFilter, applySearch}) => {\r\n\r\n    const [filterParam, setFilterParam] = useState(\"\")\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const locationFilters = [\"Paris\", \"London\", \"Canada\", \"Peru\", \"Tokyo\"]\r\n    \r\n    const showFiltersAndApply = (params) => {\r\n        applyFilter(params)\r\n        setFilterParam(params)\r\n    }\r\n\r\n    const removeAppliedFilter = () => {\r\n        removeFilter()\r\n        setFilterParam(\"\")\r\n        setSearchText(\"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(searchText === \"\"){\r\n            removeAppliedFilter()\r\n        }else{\r\n            applySearch(searchText)\r\n        }\r\n    }, [searchText])\r\n\r\n    return(\r\n        <div className=\"inline-block float-right\">\r\n            <SearchBar searchText={searchText} styleClass=\"mr-4\" setSearchText={setSearchText}/>\r\n            {filterParam != \"\" && <button onClick={() => removeAppliedFilter()} className=\"btn btn-xs mr-2 btn-active btn-ghost normal-case\">{filterParam}<XMarkIcon className=\"w-4 ml-2\"/></button>}\r\n            <div className=\"dropdown dropdown-bottom dropdown-end\">\r\n                <label tabIndex={0} className=\"btn btn-sm btn-outline\"><FunnelIcon className=\"w-5 mr-2\"/>Filter</label>\r\n                <ul tabIndex={0} className=\"dropdown-content menu p-2 text-sm shadow bg-base-100 rounded-box w-52\">\r\n                    {\r\n                        locationFilters.map((l, k) => {\r\n                            return  <li key={k}><a href=\"#\" onClick={() => showFiltersAndApply(l)}>{l}</a></li>\r\n                        })\r\n                    }\r\n                    <div className=\"divider mt-0 mb-0\"></div>\r\n                    <li><a href=\"#\" onClick={() => removeAppliedFilter()}>Remove Filter</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}*/\r\n\r\n\r\nconst Subscription = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        //dispatch(getLeadsContent());\r\n        agentSubscription();\r\n    }, []);\r\n    const [agentsubscriptions, setAgentSubscriptions] = useState(\"\");\r\n    const subscriptionDetails = useSelector(state => state.subscriptionDetail);\r\n    //const [agentsubscriptions, setAgentSubscriptions] = useSelector(state => state.lead)\r\n    \r\n    const removeFilter = () => {\r\n        //setTrans(RECENT_TRANSACTIONS)\r\n    }\r\n    /***********************************************************************/\r\n    /***********************************************************************/\r\n    \r\n    /**\r\n     * Get Users courses list\r\n     * \r\n     */\r\n    const agentSubscription = () => {\r\n        axios.get('admin/agent-subscription').then(response => {\r\n                toast.dismiss();\r\n    \r\n                if (response.data) {\r\n                    console.log(response.data)\r\n                    if(response.data.status) {\r\n                        setAgentSubscriptions(response.data.data);\r\n                        console.log(response.data.data)\r\n                    }\r\n                    \r\n                }\r\n            }).catch(error => {\r\n                toast.dismiss();\r\n                if (error.response) {\r\n                    toast.error('Code is not available', { position: \"top-center\",autoClose: 3000 });\r\n                }\r\n            });\r\n        \r\n    }\r\n    /***********************************************************************/\r\n    /***********************************************************************/\r\n    const applyFilter = (params) => {\r\n        let filteredTransactions = agentsubscriptions.filter((t) => {return t.plan_name == params})\r\n        setAgentSubscriptions(filteredTransactions)\r\n    }\r\n    /***********************************************************************/\r\n    /***********************************************************************/\r\n    // Search according to name\r\n    const applySearch = (value) => {\r\n        let filteredTransactions = agentsubscriptions.filter((t) => {return t.plan_name.toLowerCase().includes(value.toLowerCase()) ||  t.plan_name.toLowerCase().includes(value.toLowerCase())})\r\n        setAgentSubscriptions(filteredTransactions)\r\n    }\r\n    /***********************************************************************/\r\n    /***********************************************************************/\r\n    const openAddNewLeadModal = (id) => {\r\n        dispatch(openModal({title : \"Subscription Details\", bodyType : MODAL_BODY_TYPES.SUBSCRIPTION_DETAIL,\r\n            extraObject : {message : `Are you sure you want to delete this lead?`, type : CONFIRMATION_MODAL_CLOSE_TYPES.LEAD_DELETE, id}}))\r\n        \r\n    }\r\n    /***********************************************************************/\r\n    /***********************************************************************/\r\n    return(\r\n        <>\r\n            <div className=\"drawer drawer-mobile\">\r\n                <input id=\"left-sidebar-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n                <div className=\"drawer-content flex flex-col \">\r\n                    <Header/>\r\n                    {/*<TitleCard title=\"Subscription\" topMargin=\"mt-2\" TopSideButtons={<TopSideButtons applySearch={applySearch} applyFilter={applyFilter} removeFilter={removeFilter}/>}>*/}\r\n                    <TitleCard title=\"Subscription\" topMargin=\"mt-2\" TopSideButtons=\"\">\r\n                        {console.log('agentsubscriptions=',agentsubscriptions)}\r\n                        {/* Team Member list in table format loaded constant */}\r\n                        <div className=\"overflow-x-auto w-full\">\r\n                            <table className=\"table w-full\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Payment mode</th>\r\n                                    <th>Payment Status</th>\r\n                                    <th>Amount</th>\r\n                                    <th>Is Recurring</th>\r\n                                    <th>Transaction Date</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {agentsubscriptions && agentsubscriptions.map && agentsubscriptions.map((l, k) => {\r\n                                            return(\r\n                                                <tr key={k}>\r\n                                                    <td>\r\n                                                        <div className=\"flex items-center space-x-3\">\r\n                                                            {/*<div className=\"avatar\">\r\n                                                                <div className=\"mask mask-circle w-12 h-12\">\r\n                                                                    <img src={l.avatar} alt=\"Avatar\" />\r\n                                                                </div>\r\n                                                            </div>*/}\r\n                                                            <div>\r\n                                                                <div className=\"font-bold\">{l.plan_name}</div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{l.payment_mode}</td>\r\n                                                    <td>{l.payment_status}</td>\r\n                                                    <td>R{l.amount}</td>\r\n                                                    <td>{l.is_recurring}</td>\r\n                                                    <td>{moment(l.createdAt).format(\"YYYY-MM-DD\")}</td>\r\n                                                    <td><a href=\"#\" className=\"inline-block px-4 py-3 text-sm font-semibold text-center text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\" onClick={() => openAddNewLeadModal(l.id)}>View</a></td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    \r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </TitleCard>\r\n                </div>\r\n                <Nav/>\r\n            </div>\r\n            <RightSidebar />\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Subscription"],"names":["_ref","styleClass","children","_jsx","className","concat","title","topMargin","TopSideButtons","_jsxs","Subtitle","dispatch","useDispatch","useEffect","agentSubscription","_useState","useState","_useState2","_slicedToArray","agentsubscriptions","setAgentSubscriptions","useSelector","state","subscriptionDetail","axios","get","then","response","toast","dismiss","data","console","log","status","catch","error","position","autoClose","_Fragment","id","type","Header","TitleCard","map","l","k","plan_name","payment_mode","payment_status","amount","is_recurring","moment","createdAt","format","href","onClick","openModal","bodyType","MODAL_BODY_TYPES","SUBSCRIPTION_DETAIL","extraObject","message","CONFIRMATION_MODAL_CLOSE_TYPES","LEAD_DELETE","Nav","RightSidebar","Footer"],"sourceRoot":""}
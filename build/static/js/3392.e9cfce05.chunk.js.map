{"version":3,"file":"static/js/3392.e9cfce05.chunk.js","mappings":"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","sources":["containers/admin/DefaultedPaymentOfAmbassador.jsx","validation-schemas/AdminLoginSchema.js","validation-schemas/ReportSchema.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Chart as ChartJS } from \"chart.js\";\r\n\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Header from \"../../components/admin/Header\";\r\nimport Footer from \"../../components/admin/Footer\";\r\nimport AdminLoginSchema from \"../../validation-schemas/AdminLoginSchema\";\r\nimport { Formik, Form, ErrorMessage, Field, resetForm } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport ErrorText from \"../../components/utility/ErrorText\";\r\nimport ArrowDownTrayIcon from \"@heroicons/react/24/outline/ArrowDownTrayIcon\";\r\nimport ShareIcon from \"@heroicons/react/24/outline/ShareIcon\";\r\nimport EnvelopeIcon from \"@heroicons/react/24/outline/EnvelopeIcon\";\r\nimport EllipsisVerticalIcon from \"@heroicons/react/24/outline/EllipsisVerticalIcon\";\r\nimport ArrowPathIcon from \"@heroicons/react/24/outline/ArrowPathIcon\";\r\nimport Datepicker from \"react-tailwindcss-datepicker\";\r\nimport SuspenseContent from \"../SuspenseContent\";\r\nimport Nav from \"../../components/admin/Nav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeNotificationMessage } from \"../../components/admin/common/headerSlice\";\r\nimport RightSidebar from \"../../components/admin/common/RightSidebar\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport ReportSchema from \"../../validation-schemas/ReportSchema\";\r\nimport TitleCard from \"../../components/admin/common/TitleCard\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport \"react-data-table-component-extensions/dist/index.css\";\r\n\r\nconst DefaultedPaymentOfAmbassador = () => {\r\n  const [navigateUrl, setNavigateUrl] = useState([]);\r\n  const [userReport, setUserReport] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [orderDataSet, setOrderDataSet] = useState([]);\r\n  const tableData = {};\r\n  const [index, setIndex] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const statsData = [];\r\n  const [dateValue, setDateValue] = useState({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n  });\r\n\r\n  const authInfo = JSON.parse(localStorage.getItem(\"authInfo\"));\r\n  const location = useLocation();\r\n  console.log(\"authInfo=\", authInfo);\r\n  let [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  let [userid, setUserid] = useState(authInfo ? authInfo.id : null);\r\n  const navigate = useNavigate();\r\n  const { newNotificationMessage, newNotificationStatus } = useState(\"\");\r\n  const apiUrl = \"defaulted-subscription-paymentof-ambassador\";\r\n\r\n  useEffect(() => {\r\n    if (newNotificationMessage !== \"\") {\r\n      if (newNotificationStatus === 1)\r\n        NotificationManager.success(newNotificationMessage, \"Success\");\r\n      if (newNotificationStatus === 0)\r\n        NotificationManager.error(newNotificationMessage, \"Error\");\r\n      dispatch(removeNotificationMessage());\r\n    }\r\n    firstRenderReport();\r\n  }, []);\r\n  toast.configure();\r\n\r\n\r\n  const firstRenderReport = () => {\r\n    axios\r\n      .get(`admin/${apiUrl}`)\r\n      .then((response) => {\r\n        console.log(\"REports Data: \", response.data.data)\r\n        if (response.data.status) {\r\n          toast.success(response.data.message, {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n          });\r\n          setUserReport(response.data.data);\r\n          var ambassadorData = response.data.data;\r\n          let ambassadorDataArray = [];\r\n          ambassadorData.forEach(function (value) {\r\n            ambassadorDataArray.push({\r\n                Ambassador_firstname: value.userid.firstname,\r\n                Ambassador_lastname: value.userid.surname,\r\n                referral_code: value.userid.referral_code,\r\n                payment_status: value.payment_status,\r\n            });\r\n          });\r\n          var columnsData = [\r\n            {\r\n                name: \"AMBASSADOR FIRST NAME\",\r\n                selector: (row, i) => row.Ambassador_firstname,\r\n                cell: (row) => row.Ambassador_firstname,\r\n                sortable: true,\r\n              },\r\n              {\r\n                name: \"AMBASSADOR LAST NAME\",\r\n                selector: (row, i) => row.Ambassador_lastname,\r\n                cell: (row) => row.Ambassador_lastname,\r\n                sortable: true,\r\n              },\r\n              {\r\n                name: \"AMBASSADOR REFERRAL CODE\",\r\n                selector: (row, i) => row.referral_code,\r\n                cell: (row) => <span>{row.referral_code}</span>,\r\n                sortable: true,\r\n              },              \r\n            {\r\n              name: \"PAIMENT FAILURE REASON\",\r\n              selector: (row, i) => row.payment_status,\r\n              cell: (row) => <span>{row.payment_status === \"cancel\" ? \"Payment failed\" : \"Payment not done\"}</span>,\r\n              sortable: true,\r\n            },\r\n          ];\r\n          setColumns(columnsData);\r\n          setOrderDataSet(ambassadorDataArray);\r\n          console.log(userReport);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n          //resetForm();\r\n          toast.error(error.response.data.message, { autoClose: 3000 });\r\n        }\r\n        console.log(error);\r\n      });\r\n    console.log(\"apiUrl=\" + apiUrl);\r\n  }\r\n\r\n  /***********************************************************************/\r\n  /***********************************************************************/\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    console.log(\"This is ambassador handleSubmit values check:\",values);\r\n    let urls = \"defaulted-subscription-paymentof-ambassador\";\r\n    if (values.start_date) {\r\n      urls += \"/\" + values.start_date;\r\n    }\r\n    if (values.end_date) {\r\n      urls += \"/\" + values.end_date;\r\n    }\r\n    axios\r\n      .get(`admin/${urls}`, values)\r\n      .then((response) => {\r\n        if (response.data.status) {\r\n          toast.success(response.data.message, {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n          });\r\n          setUserReport(response.data.data);\r\n          console.log('userReport datewise:',response.data.data);\r\n          console.log('userReport=',userReport);\r\n          var ambassadorData = response.data.data;\r\n          let ambassadorDataArray = [];\r\n          ambassadorData.forEach(function (value) {\r\n            ambassadorDataArray.push({\r\n              Ambassador_firstname: value.userid.firstname,\r\n              Ambassador_lastname: value.userid.surname,\r\n              referral_code: value.userid.referral_code,\r\n              payment_status: value.payment_status,\r\n            });\r\n          });\r\n          setOrderDataSet(ambassadorDataArray);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.dismiss();\r\n        if (error.response) {\r\n          resetForm();\r\n          toast.error(error.response.data.message, { autoClose: 3000 });\r\n        }\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleResetButton = (resetForm) => {\r\n    resetForm();\r\n    firstRenderReport();  \r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"drawer drawer-mobile\">\r\n        <input\r\n          id=\"left-sidebar-drawer\"\r\n          type=\"checkbox\"\r\n          className=\"drawer-toggle\"\r\n        />\r\n        <div className=\"drawer-content flex flex-col \">\r\n          <Header />\r\n          <main className=\"flex-1 overflow-y-auto pt-2 px-2  bg-base-200\">\r\n\r\n            {/* report section */}\r\n            <div className=\"bg-zinc-50 px-3 py-3 rounded-xl bg-white shadow-mx border border-zinc-200\">\r\n              <div className=\"text-xl font-semibold py-1 px-2\">\r\n              Defaulted Subscription Payment of Ambassador\r\n              </div>\r\n              <div className=\"divider mt-2\"></div>\r\n              <div className=\"\">\r\n                <div className=\"flex w-[100%] align-center\">\r\n                  <Formik\r\n                    initialValues={{\r\n                      start_date: \"\",\r\n                      end_date: \"\",\r\n                    }}\r\n                    validationSchema={ReportSchema}\r\n                    onSubmit={(values, { resetForm }) => {\r\n                      handleSubmit(values, { resetForm });\r\n                    }}\r\n                  >\r\n                    {({ resetForm }) => (\r\n                    <Form className=\"flex w-[100%] justify-between align-center py-3 rounded-sl bg-base-100 rounded px-2\">\r\n                      <div className=\"flex flex-col\">\r\n                        <label htmlFor=\"start_date\">Start Date</label>\r\n                        <Field\r\n                          name=\"start_date\"\r\n                          type=\"date\"\r\n                          className=\"input input-bordered w-full\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"start_date\"\r\n                          component=\"div\"\r\n                          className=\"text-red-500 text-sm\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"flex flex-col\">\r\n                        <label htmlFor=\"end_date\">End Date</label>\r\n                        <Field\r\n                          name=\"end_date\"\r\n                          type=\"date\"\r\n                          className=\"input input-bordered w-full\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"end_date\"\r\n                          component=\"div\"\r\n                          className=\"text-red-500 text-sm\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex align-center justify-between mt-6\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center  text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\"\r\n                        >\r\n                          Search\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center  text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\"\r\n                          onClick={() => handleResetButton(resetForm)}\r\n                        >\r\n                          Reset\r\n                        </button>\r\n\r\n                        {/* <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\"\r\n                        >\r\n                          Export\r\n                        </button> */}\r\n                      </div>\r\n                    </Form>\r\n                    )}\r\n                  </Formik>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"overflow-x-auto w-full\">\r\n              <DataTableExtensions\r\n                columns={columns}\r\n                data={orderDataSet}\r\n              >\r\n                <DataTable\r\n                  title=\"Table\"\r\n                  noHeader\r\n                  defaultSortField=\"id\"\r\n                  defaultSortAsc={false}\r\n                  pagination\r\n                  highlightOnHover\r\n                  customStyles={{\r\n                    rows: {\r\n                      style: {\r\n                        minHeight: '50px', // override the row height\r\n                      }\r\n                    },\r\n                    cells: {\r\n                      style: {\r\n                        whiteSpace: 'nowrap', // add white-space nowrap to prevent wrapping\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n              </DataTableExtensions>\r\n\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n        <Nav />\r\n      </div>\r\n      <RightSidebar />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultedPaymentOfAmbassador;\r\n","import * as Yup from 'yup';\r\n\r\nexport default Yup.object().shape({\r\n    email: Yup.string().email().required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required.\").min(6, 'Password is too short - should be 6 chars minimum.').max(20, 'Password is too long - should be 20 chars maximum.')\r\n    //role: Yup.string().required(\"User Type is required\")\r\n})","import * as yup from 'yup';\r\n\r\nexport default yup.object().shape({\r\n  // report_type: yup.string().required('Report type is required'),\r\n  start_date: yup.date().required('Start date is required'),\r\n  end_date: yup.date().required('End date is required'),\r\n\r\n  // start_date: yup.date().nullable(),\r\n  //   end_date: yup.date().nullable(),\r\n});"],"names":["DefaultedPaymentOfAmbassador","navigateUrl","setNavigateUrl","useState","userReport","setUserReport","columns","setColumns","data","setData","orderDataSet","setOrderDataSet","index","setIndex","dispatch","useDispatch","dateValue","setDateValue","startDate","Date","endDate","authInfo","JSON","parse","localStorage","getItem","useLocation","console","log","loading","setLoading","errorMessage","setErrorMessage","userid","setUserid","id","useNavigate","newNotificationMessage","newNotificationStatus","apiUrl","useEffect","NotificationManager","success","error","removeNotificationMessage","firstRenderReport","toast","configure","axios","get","concat","then","response","status","message","position","autoClose","ambassadorData","ambassadorDataArray","forEach","value","push","Ambassador_firstname","firstname","Ambassador_lastname","surname","referral_code","payment_status","name","selector","row","i","cell","sortable","_jsx","children","catch","dismiss","_jsxs","_Fragment","className","type","Header","Formik","initialValues","start_date","end_date","validationSchema","ReportSchema","onSubmit","values","_ref2","resetForm","handleSubmit","_ref","urls","_ref3","Form","htmlFor","Field","ErrorMessage","component","onClick","handleResetButton","DataTableExtensions","DataTable","title","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","customStyles","rows","style","minHeight","cells","whiteSpace","Nav","RightSidebar","Footer","Yup","shape","email","required","password","min","max","yup"],"sourceRoot":""}
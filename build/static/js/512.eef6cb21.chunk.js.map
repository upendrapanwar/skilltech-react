{"version":3,"file":"static/js/512.eef6cb21.chunk.js","mappings":"sUA4BA,MAqbA,EArbuBA,KAEnB,MAAMC,EAAoB,CACtB,CAAEC,MAAO,kCAAmCC,IAAK,gCACjD,CAAED,MAAO,oCAAqCC,IAAK,gCACnD,CAAED,MAAO,iDAAkDC,IAAK,+CAChE,CAAED,MAAO,kDAAmDC,IAAK,+CACjE,CAAED,MAAO,uCAAwCC,IAAK,uCACtD,CAAED,MAAO,uCAAwCC,IAAK,uCACtD,CAAED,MAAO,0BAA2BC,IAAK,2CACzC,CAAED,MAAO,iCAAkCC,IAAK,kCAChD,CAAED,MAAO,mCAAoCC,IAAK,sCAe/CC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,wCACxCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,KACtCK,EAA4BC,IAAiCN,EAAAA,EAAAA,UAAS,KACtEO,EAA0CC,IAA+CR,EAAAA,EAAAA,UAAS,KAClGS,EAA0CC,IAA+CV,EAAAA,EAAAA,UAAS,KAClGW,EAAmCC,IAAwCZ,EAAAA,EAAAA,UAAS,KACpFa,EAAmCC,IAAwCd,EAAAA,EAAAA,UAAS,KACpFe,EAAqCC,IAA0ChB,EAAAA,EAAAA,UAAS,KACxFiB,EAA6BC,IAAkClB,EAAAA,EAAAA,UAAS,KACxEmB,EAA+BC,IAAoCpB,EAAAA,EAAAA,UAAS,KAC5EqB,EAAOC,IAAYtB,EAAAA,EAAAA,UAAS,GAC7BuB,GAAWC,EAAAA,EAAAA,OAGVC,EAAWC,IAAgB1B,EAAAA,EAAAA,UAAS,CACvC2B,UAAW,IAAIC,KACfC,QAAS,IAAID,OAGXE,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,cAChCC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,YAAaP,GACzB,IAAKQ,EAASC,IAAcvC,EAAAA,EAAAA,WAAS,GACrC,MAAOwC,EAAcC,IAAmBzC,EAAAA,EAAAA,UAAS,IACjD,IAAK0C,EAAQC,IAAa3C,EAAAA,EAAAA,UAAS8B,EAAWA,EAASc,GAAK,OAC3CC,EAAAA,EAAAA,MAAjB,MACM,uBAAEC,EAAsB,sBAAEC,IAA0B/C,EAAAA,EAAAA,UAAS,IAC7DgD,EAAS,gCAEfC,EAAAA,EAAAA,YAAU,KACyB,KAA3BH,IAC8B,IAA1BC,GAA6BG,EAAAA,GAAoBC,QAAQL,EAAwB,WACvD,IAA1BC,GAA6BG,EAAAA,GAAoBE,MAAMN,EAAwB,SACnFvB,GAAS8B,EAAAA,EAAAA,QAEbC,IAAmB,GACpB,IACHC,EAAAA,GAAMC,YAEN,MAAMF,GAAoBA,KACtBpD,EAAgB8C,GAChBS,EAAAA,EAAMC,IAAI,SAADC,OAAUX,IAAUY,MAAKC,IAC1BA,EAASC,KAAKC,SACdR,EAAAA,GAAMJ,QAAQU,EAASC,KAAKE,QAAS,CAAEC,SAAU,aAAcC,UAAW,MAC1E9D,EAAcyD,EAASC,KAAKA,MAE5B1B,QAAQC,IAAIlC,GAChB,IACDgE,OAAMf,IACLG,EAAAA,GAAMa,UACFhB,EAAMS,UAENN,EAAAA,GAAMH,MAAMA,EAAMS,SAASC,KAAKE,QAAS,CAAEE,UAAW,MAE1D9B,QAAQC,IAAIe,EAAM,IAEtBhB,QAAQC,IAAI,UAAYW,EAAO,EA4GnC,OAZAZ,QAAQC,IAAI,aAAclC,GAC1BiC,QAAQC,IAAI,6BAA8BhC,GAE1C+B,QAAQC,IAAI,2CAA4C9B,GACxD6B,QAAQC,IAAI,2CAA4C5B,GACxD2B,QAAQC,IAAI,oCAAqC1B,GACjDyB,QAAQC,IAAI,oCAAqCxB,GAEjDuB,QAAQC,IAAI,sCAAuCtB,IAM/CsD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,uBAAsBD,SAAA,EACjCE,EAAAA,EAAAA,KAAA,SAAO7B,GAAG,sBAAsB8B,KAAK,WAAWF,UAAU,mBAC1DH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gCAA+BD,SAAA,EAC1CE,EAAAA,EAAAA,KAACE,EAAAA,EAAM,KACPF,EAAAA,EAAAA,KAAA,QAAMD,UAAU,gDAA+CD,UAkC3DF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,4EAA2ED,SAAA,EACtFE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kCAAiCD,SAAC,YACjDE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBACfC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,GAAED,UACbE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,6BAA4BD,UACvCE,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACHC,cAAe,CACXC,WAAY,GACZC,SAAU,GACVC,YAAa,MAEjBC,iBAAkBC,EAAAA,EAElBC,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EA7J/CE,EAACH,EAAMI,KAAqB,IAAnB,UAAEF,GAAWE,EACvCpD,QAAQC,IAAI+C,GACZ9D,EAAS8D,EAAOJ,aAChB,MAAMhC,EAASrD,EAAkByF,EAAOJ,aAAanF,IACrD,IAAI4F,EAAOzC,EAEX9C,EAAgB8C,GAChBZ,QAAQC,IAAI,WAAYW,GACxBjD,EAAe,UAAD4D,OAAWX,IACrBoC,EAAON,aACPW,GAAQ,IAAML,EAAON,YAErBM,EAAOL,WACPU,GAAQ,IAAML,EAAOL,UAGzBtB,EAAAA,EAAMC,IAAI,SAADC,OAAU8B,GAAQL,GAAQxB,MAAKC,IACpC,GAAIA,EAASC,KAAKC,OAAQ,CAWtB,GAVAR,EAAAA,GAAMJ,QAAQU,EAASC,KAAKE,QAAS,CAAEC,SAAU,aAAcC,UAAW,MAC3D,iCAAXlB,GACA5C,EAAcyD,EAASC,KAAKA,MAIjB,iCAAXd,GACA1C,EAA8BuD,EAASC,KAAKA,MAGjC,gDAAXd,EAA0D,CAC1D,MACM0C,EADiB7B,EAASC,KAAKA,KACL6B,QAAOC,GAAwB,OAAhBA,EAAKlD,QAA2C,mBAAxBkD,EAAKC,iBAE5ErF,EAA4CkF,EAGhD,CAEA,GAAe,gDAAX1C,EAA0D,CAC1D,MACM0C,EADiB7B,EAASC,KAAKA,KACL6B,QAAOC,GAAwB,OAAhBA,EAAKlD,QAA2C,mBAAxBkD,EAAKC,iBAC5EnF,EAA4CgF,EAGhD,CACA,GAAe,wCAAX1C,EAAkD,CAClD,MACM0C,EADc7B,EAASC,KAAKA,KACL6B,QAAOC,GAAwB,OAAhBA,EAAKE,SACjDlF,EAAqC8E,EAGzC,CACA,GAAe,wCAAX1C,EAAkD,CAClD,MACM0C,EADc7B,EAASC,KAAKA,KACL6B,QAAOC,GAAwB,OAAhBA,EAAKE,SACjDhF,EAAqC4E,EAGzC,CACe,4CAAX1C,GACAhC,EAAuC6C,EAASC,KAAKA,MAG1C,mCAAXd,GACA9B,EAA+B2C,EAASC,KAAKA,MAGlC,qCAAXd,GACA5B,EAAiCyC,EAASC,KAAKA,MAGnD1B,QAAQC,IAAI,gBAAiBpC,EAEjC,KACDkE,OAAMf,IACLG,EAAAA,GAAMa,UACFhB,EAAMS,WACNyB,IACA/B,EAAAA,GAAMH,MAAMA,EAAMS,SAASC,KAAKE,QAAS,CAAEE,UAAW,OAE1D9B,QAAQC,IAAIe,EAAM,GACpB,EA8EkCmC,CAAaH,EAAQ,CAAEE,aAAY,EACrCf,SAEDwB,IAAA,IAAC,UAAET,GAAWS,EAAA,OACf1B,EAAAA,EAAAA,MAAC2B,EAAAA,GAAI,CAACxB,UAAU,sFAAqFD,SAAA,EAEjGF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,aAAY1B,SAAC,gBAC5BE,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CAACC,KAAK,aAAazB,KAAK,OAAOF,UAAU,0CAC/CC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAY,CAACD,KAAK,aAAaE,UAAU,MAAM7B,UAAU,6BAG9DH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,WAAU1B,SAAC,cAC1BE,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CAACC,KAAK,WAAWzB,KAAK,OAAOF,UAAU,0CAC7CC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAY,CAACD,KAAK,WAAWE,UAAU,MAAM7B,UAAU,6BAE5DH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gBAAeD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,cAAa1B,SAAC,iBAC7BF,EAAAA,EAAAA,MAAC6B,EAAAA,GAAK,CAACI,GAAG,SAASH,KAAK,cAAcvD,GAAG,cAAc4B,UAAU,0DAAyDD,SAAA,EACtHE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAM,GAAEhC,SAAC,sBACjBE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAO,EAAEhC,SAAC,wCAClBE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAO,EAAEhC,SAAC,wCAClBE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAO,EAAEhC,SAAC,mDAClBE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAO,EAAEhC,SAAC,mDAClBE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAO,EAAEhC,SAAC,2DAClBE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAO,EAAEhC,SAAC,2DAClBE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAO,EAAEhC,SAAC,8BAClBE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAO,EAAEhC,SAAC,qCAClBE,EAAAA,EAAAA,KAAA,UAAQ8B,MAAO,EAAEhC,SAAC,0CAEtBE,EAAAA,EAAAA,KAAC2B,EAAAA,GAAY,CAACD,KAAK,cAAcE,UAAU,MAAM7B,UAAU,6BAG/DH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yCAAwCD,SAAA,EACnDE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASF,UAAU,iMAAgMD,SAAC,YACjOE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASF,UAAU,iMAC/BgC,QAASA,IA9G3BlB,KACvBA,IACAhC,IAAmB,EA4GqCmD,CAAkBnB,GAAWf,SAC3C,eAIH,SAKnBE,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CAAC9G,MAAOD,EAAkB0B,GAAOzB,MAAO+G,UAAU,OAAMpC,UAE9DE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,yBAAwBD,UACnCF,EAAAA,EAAAA,MAAA,SAAOG,UAAU,eAAcD,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,SAAAF,SA3RV,CACtB,CAAC,wBAAyB,uBAAwB,2BAA4B,2BAA4B,sBAAuB,8BACjI,CAAC,wBAAyB,uBAAwB,2BAA4B,uBAC9E,CAAC,wBAAyB,uBAAwB,2BAA4B,0BAC9E,CAAC,wBAAyB,uBAAwB,0BAClD,CAAC,wBAAyB,uBAAwB,2BAA4B,yCAC9E,CAAC,wBAAyB,uBAAwB,yCAClD,CAAC,wBAAyB,sBAAuB,iCAAkC,iCAAkC,gCAAiC,iCAAiC,2BACvL,CAAC,wBAAyB,sBAAuB,iCAAkC,iCAAkC,gCAAiC,kCACtJ,CAAC,wBAAyB,sBAAuB,iCAAkC,iCAAkC,gCAAiC,mCAmR/FlD,GAAOuF,KAAI,CAAC9C,EAAMzC,KAC1BoD,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACHE,EAAAA,EAAAA,KAAA,MAAAF,SAAiBT,GAARzC,UAMrBgD,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CACKnC,QAAQC,IAAI,gBAAiBpC,GAC7BmC,QAAQC,IAAI,cAAelC,GACV,iCAAjBF,GAAmDE,EAAW0G,OAAS,GAAK1G,EAAWyG,KAAI,CAACE,EAAMzF,KAG3FgD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACwB,KAAnBuC,EAAKC,YAAoB1C,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKuC,EAAKC,UAAYD,EAAKC,UAAUC,cAAgB,MAAM,OACnE,KAAjBF,EAAKG,UAAkBxC,EAAAA,EAAAA,KAAA,MAAAF,SAAKuC,EAAKG,QAAUH,EAAKG,QAAQD,cAAgB,QACjD,KAAvBF,EAAKI,gBAAwBzC,EAAAA,EAAAA,KAAA,MAAAF,SAAKuC,EAAKI,cAAgBJ,EAAKI,cAAgB,QACjD,KAA3BJ,EAAKK,oBAA4B1C,EAAAA,EAAAA,KAAA,MAAAF,SAAKuC,EAAKK,kBAAoB,IAAIvF,KAAKkF,EAAKK,mBAAmBC,qBAAuB,SACxH3C,EAAAA,EAAAA,KAAA,MAAAF,SAAI,WACsB,KAAzBuC,EAAKO,kBAA0B5C,EAAAA,EAAAA,KAAA,MAAAF,SAAKuC,EAAKO,gBAAkB,IAAIzF,KAAKkF,EAAKO,iBAAiBD,qBAAuB,UAN7G/F,KAcC,iCAAjBpB,GAAmDI,GAA8BA,EAA2BuG,KAAI,CAACE,EAAMzF,KAEhHgD,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKuC,EAAKC,UAAYD,EAAKC,UAAUC,cAAgB,MAAM,QAC3DvC,EAAAA,EAAAA,KAAA,MAAAF,SAAKuC,EAAKG,QAAUH,EAAKG,QAAQD,cAAgB,SACjDvC,EAAAA,EAAAA,KAAA,MAAAF,SAAKuC,EAAKK,kBAAoB,IAAIvF,KAAKkF,EAAKK,mBAAmBC,qBAAuB,SACtF3C,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aAJClD,KAUC,gDAAjBpB,GAAkEM,GAA4CA,EAAyCqG,KAAI,CAAChB,EAAMvE,KACxJoD,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKlD,OAAOqE,UAAUC,iBAC3BvC,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKlD,OAAOuE,QAAQD,iBACzBvC,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKlD,OAAOwE,iBACjBzC,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKC,mBAJLxE,OASC,gDAAjBpB,GAAkEQ,GAA4CA,EAAyCmG,KAAI,CAAChB,EAAMvE,KACxJoD,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKlD,OAAOqE,UAAUC,iBAC3BvC,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKlD,OAAOuE,QAAQD,iBACzBvC,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKC,mBAHLxE,OAQC,wCAAjBpB,GAA0DU,EAAkCiG,KAAI,CAAChB,EAAMvE,KAC7FoD,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKE,OAAOiB,UAAUC,iBAC3BvC,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKE,OAAOmB,QAAQD,iBACzBvC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAK0B,sBAJLjG,OASC,wCAAjBpB,GAA0DY,EAAkC+F,KAAI,CAAChB,EAAMvE,KAC7FoD,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKE,OAAOiB,UAAUC,iBAC3BvC,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAKE,OAAOmB,QAAQD,iBACzBvC,EAAAA,EAAAA,KAAA,MAAAF,SAAKqB,EAAK0B,sBAHLjG,OASC,4CAAjBpB,GAA8Dc,EAAoC6F,KAAI,CAAC9C,EAAMzC,KACnGoD,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACPF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAKyD,wBACV9C,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK0D,uBACV/C,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK2D,2BACVhD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK4D,wBACVjD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK6D,uBACVlD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK8D,gCACVnD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK+D,4BAPLxG,OAYK,mCAAjBpB,GAAqDgB,EAA4B2F,KAAI,CAAC9C,EAAMzC,KAClFoD,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACPF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAKyD,wBACV9C,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK0D,uBACV/C,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK2D,2BACVhD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK4D,wBACVjD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK6D,uBACVlD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK8D,iCANLvG,OAWK,qCAAjBpB,GAAuDkB,EAA8ByF,KAAI,CAAC9C,EAAMzC,KACtFoD,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACPF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAKyD,wBACV9C,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK0D,uBACV/C,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK2D,2BACVhD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK4D,wBACVjD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK6D,uBACVlD,EAAAA,EAAAA,KAAA,MAAAF,SAAKT,EAAK8D,iCANLvG,QAWboD,EAAAA,EAAAA,KAAA,MAAAF,UAAIE,EAAAA,EAAAA,KAAA,MAAIqD,MAAO,CAAE,aAAc,SAAWC,QAAQ,IAAGxD,UAACE,EAAAA,EAAAA,KAACuD,EAAAA,GAAI,CAACxD,UAAU,gLAAgLyD,GAAInI,EAAYyE,SAAC,qCAQnSE,EAAAA,EAAAA,KAACyD,EAAAA,EAAG,QAERzD,EAAAA,EAAAA,KAAC0D,EAAAA,EAAY,KACb1D,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,MACR,C","sources":["containers/admin/AdminDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Chart as ChartJS } from 'chart.js';\r\n\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Header from \"../../components/admin/Header\";\r\nimport Footer from \"../../components/admin/Footer\";\r\nimport AdminLoginSchema from '../../validation-schemas/AdminLoginSchema';\r\nimport { Formik, Form, ErrorMessage, Field, resetForm } from 'formik';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport ErrorText from \"../../components/utility/ErrorText\";\r\nimport ArrowDownTrayIcon from '@heroicons/react/24/outline/ArrowDownTrayIcon';\r\nimport ShareIcon from '@heroicons/react/24/outline/ShareIcon';\r\nimport EnvelopeIcon from '@heroicons/react/24/outline/EnvelopeIcon';\r\nimport EllipsisVerticalIcon from '@heroicons/react/24/outline/EllipsisVerticalIcon';\r\nimport ArrowPathIcon from \"@heroicons/react/24/outline/ArrowPathIcon\";\r\nimport Datepicker from \"react-tailwindcss-datepicker\";\r\nimport SuspenseContent from '../SuspenseContent';\r\nimport Nav from '../../components/admin/Nav';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { removeNotificationMessage } from \"../../components/admin/common/headerSlice\";\r\nimport RightSidebar from '../../components/admin/common/RightSidebar';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport ReportSchema from \"../../validation-schemas/ReportSchema\";\r\nimport TitleCard from \"../../components/admin/common/TitleCard\";\r\n\r\n\r\nconst AdminDashboard = () => {\r\n\r\n    const reportTitleAndUrl = [\r\n        { title: \"Active Subcripton of Ambassador\", url: \"active-subscribed-ambassador\" },\r\n        { title: \"Active Subscription of Subscriber\", url: \"active-subscribed-subscriber\" },\r\n        { title: \"Defaulted Subscriptions Payments of Ambassador\", url: \"defaulted-subscription-paymentof-ambassador\" },\r\n        { title: \"Defaulted Subscriptions Payments of Subscribers\", url: \"defaulted-subscription-paymentof-subscriber\" },\r\n        { title: \"Subscription cancelled by Ambassador\", url: \"subscription-cancelledby-ambassador\" },\r\n        { title: \"Subscription cancelled by Subscriber\", url: \"subscription-cancelledby-subscriber\" },\r\n        { title: \"Referral Per Ambassador\", url: \"active-inactive-referral-per-ambassador\" },\r\n        { title: \"Active Referral Per Ambassador\", url: \"active-referral-per-ambassador\" },\r\n        { title: \"Inactive Referral Per Ambassador\", url: \"inactive-referral-per-ambassador\" }\r\n    ];\r\n\r\n    const reportTableHeader = [\r\n        [\"Ambassador First Name\", \"Ambassador Last Name\", \"Ambassador Referral Code\", \"Date of HVG subscription\", \"Subscription Status\", \"Date of ambassador sign up\"],\r\n        [\"Subscriber First Name\", \"Subscriber Last Name\", \"Date of HVG subscription\", \"Subscription Status\"],\r\n        [\"Ambassador First Name\", \"Ambassador Last Name\", \"Ambassador Referral Code\", \"Payment Failure Reason\"],\r\n        [\"Subscriber First Name\", \"Subscriber Last Name\", \"Payment Failure Reason\"],\r\n        [\"Ambassador First Name\", \"Ambassador Last Name\", \"Ambassador Referral Code\", \"Date of HVG subscription Cancellation\"],\r\n        [\"Subscriber First Name\", \"Subscriber Last Name\", \"Date of HVG subscription Cancellation\"],\r\n        [\"Subscriber First Name\", \"Subcriber Last Name\", \"Ambassador Referral Code Used \", \"Referred Ambassador First Name\", \"Referred Ambassador Last Name\", \"\tDate of use of referral code\", \"HVG Subscription status\"],\r\n        [\"Subscriber First Name\", \"Subcriber Last Name\", \"Ambassador Referral Code Used \", \"Referred Ambassador First Name\", \"Referred Ambassador Last Name\", \"\tDate of use of referral code\"],\r\n        [\"Subscriber First Name\", \"Subcriber Last Name\", \"Ambassador Referral Code Used \", \"Referred Ambassador First Name\", \"Referred Ambassador Last Name\", \"\tDate of use of referral code\"]\r\n    ];\r\n\r\n    const [navigateUrl, setNavigateUrl] = useState('/admin/active-subscribed-ambassador');\r\n    const [reportApiUrl, setReportApiUrl] = useState([]);\r\n    const [userReport, setUserReport] = useState([]);\r\n    const [activeSubscribedSubscriber, setActiveSubscribedSubscriber] = useState([]);\r\n    const [defaultedSubscriptionPaymentofambassador, setDefaultedSubscriptionPaymentofambassador] = useState([]);\r\n    const [defaultedSubscriptionPaymentofsubscriber, setDefaultedSubscriptionPaymentofsubscriber] = useState([]);\r\n    const [subscriptionCancelledbyAmbassador, setSubscriptionCancelledbyAmbassador] = useState([]);\r\n    const [subscriptionCancelledbySubscriber, setSubscriptionCancelledbySubscriber] = useState([]);\r\n    const [activeInactiveReferralPerAmbassador, setActiveInactiveReferralPerAmbassador] = useState([]);\r\n    const [activeReferralPerAmbassador, setActiveReferralPerAmbassador] = useState([]);\r\n    const [inactiveReferralPerAmbassador, setInactiveReferralPerAmbassador] = useState([]);\r\n    const [index, setIndex] = useState(0);\r\n    const dispatch = useDispatch()\r\n    const statsData = [];\r\n\r\n    const [dateValue, setDateValue] = useState({\r\n        startDate: new Date(),\r\n        endDate: new Date()\r\n    });\r\n\r\n    const authInfo = JSON.parse(localStorage.getItem(\"authInfo\"));\r\n    const location = useLocation();\r\n    console.log('authInfo=', authInfo);\r\n    let [loading, setLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    let [userid, setUserid] = useState(authInfo ? authInfo.id : null);\r\n    const navigate = useNavigate();\r\n    const { newNotificationMessage, newNotificationStatus } = useState('');\r\n    const apiUrl = 'active-subscribed-ambassador';\r\n\r\n    useEffect(() => {\r\n        if (newNotificationMessage !== \"\") {\r\n            if (newNotificationStatus === 1) NotificationManager.success(newNotificationMessage, 'Success')\r\n            if (newNotificationStatus === 0) NotificationManager.error(newNotificationMessage, 'Error')\r\n            dispatch(removeNotificationMessage())\r\n        }\r\n        firstRenderReport();\r\n    }, []);\r\n    toast.configure();\r\n\r\n    const firstRenderReport = () => {\r\n        setReportApiUrl(apiUrl);\r\n        axios.get(`admin/${apiUrl}`).then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                setUserReport(response.data.data);\r\n\r\n                console.log(userReport);\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                //resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n        console.log('apiUrl=' + apiUrl);\r\n    }\r\n\r\n    /***********************************************************************/\r\n    /***********************************************************************/\r\n    const handleSubmit = (values, { resetForm }) => {\r\n        console.log(values);\r\n        setIndex(values.report_type);\r\n        const apiUrl = reportTitleAndUrl[values.report_type].url;\r\n        var urls = apiUrl;\r\n        //reportApiUrl = apiUrl;\r\n        setReportApiUrl(apiUrl);\r\n        console.log(\"API url:\", apiUrl)\r\n        setNavigateUrl(`/admin/${apiUrl}`);\r\n        if (values.start_date) {\r\n            urls += '/' + values.start_date;\r\n        }\r\n        if (values.end_date) {\r\n            urls += '/' + values.end_date;\r\n        }\r\n\r\n        axios.get(`admin/${urls}`, values).then(response => {\r\n            if (response.data.status) {\r\n                toast.success(response.data.message, { position: \"top-center\", autoClose: 3000 });\r\n                if (apiUrl === 'active-subscribed-ambassador') {\r\n                    setUserReport(response.data.data);\r\n\r\n                    //console.log('userReport=',userReport);\r\n                }\r\n                if (apiUrl === 'active-subscribed-subscriber') {\r\n                    setActiveSubscribedSubscriber(response.data.data);\r\n                    //console.log('activeSubscribedSubscriber=',activeSubscribedSubscriber);\r\n                }\r\n                if (apiUrl === 'defaulted-subscription-paymentof-ambassador') {\r\n                    const ambassadorData = response.data.data;\r\n                    const filtered = ambassadorData.filter(item => item.userid !== null && item.payment_status === 'cancel payment');\r\n                    // console.log(\"filter ambassadorData\", filtered)\r\n                    setDefaultedSubscriptionPaymentofambassador(filtered);\r\n                    // setDefaultedSubscriptionPaymentofambassador(response.data.data);\r\n                    //console.log('defaultedSubscriptionPaymentofambassador=',defaultedSubscriptionPaymentofambassador);\r\n                }\r\n\r\n                if (apiUrl === 'defaulted-subscription-paymentof-subscriber') {\r\n                    const subscriberData = response.data.data;\r\n                    const filtered = subscriberData.filter(item => item.userid !== null && item.payment_status === 'cancel payment');\r\n                    setDefaultedSubscriptionPaymentofsubscriber(filtered);\r\n                    // setDefaultedSubscriptionPaymentofsubscriber(response.data.data);\r\n                    //console.log('defaultedSubscriptionPaymentofsubscriber=',defaultedSubscriptionPaymentofsubscriber);\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-ambassador') {\r\n                    const cancleByAmb = response.data.data;\r\n                    const filtered = cancleByAmb.filter(item => item.userId !== null);\r\n                    setSubscriptionCancelledbyAmbassador(filtered);\r\n                    // setSubscriptionCancelledbyAmbassador(response.data.data);\r\n                    //console.log('subscriptionCancelledbyAmbassador=',subscriptionCancelledbyAmbassador);\r\n                }\r\n                if (apiUrl === 'subscription-cancelledby-subscriber') {\r\n                    const cancleBySub = response.data.data;\r\n                    const filtered = cancleBySub.filter(item => item.userId !== null);\r\n                    setSubscriptionCancelledbySubscriber(filtered);\r\n                    // setSubscriptionCancelledbySubscriber(response.data.data);\r\n                    //console.log('subscriptionCancelledbySubscriber=',subscriptionCancelledbySubscriber);\r\n                }\r\n                if (apiUrl === 'active-inactive-referral-per-ambassador') {\r\n                    setActiveInactiveReferralPerAmbassador(response.data.data);\r\n                    //console.log('activeInactiveReferralPerAmbassador=',activeInactiveReferralPerAmbassador);\r\n                }\r\n                if (apiUrl === 'active-referral-per-ambassador') {\r\n                    setActiveReferralPerAmbassador(response.data.data);\r\n                    //console.log('activeReferralPerAmbassador=',activeReferralPerAmbassador);\r\n                }\r\n                if (apiUrl === 'inactive-referral-per-ambassador') {\r\n                    setInactiveReferralPerAmbassador(response.data.data);\r\n                    //console.log('inactiveReferralPerAmbassador=',inactiveReferralPerAmbassador);\r\n                }\r\n                console.log('reportApiUrl=', reportApiUrl);\r\n\r\n            }\r\n        }).catch(error => {\r\n            toast.dismiss();\r\n            if (error.response) {\r\n                resetForm();\r\n                toast.error(error.response.data.message, { autoClose: 3000 });\r\n            }\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const handleResetButton = (resetForm) => {\r\n        resetForm();\r\n        firstRenderReport();  \r\n    };\r\n\r\n    \r\n    console.log(\"userReport\", userReport)\r\n    console.log(\"activeSubscribedSubscriber\", activeSubscribedSubscriber)\r\n\r\n    console.log(\"defaultedSubscriptionPaymentofambassador\", defaultedSubscriptionPaymentofambassador)\r\n    console.log(\"defaultedSubscriptionPaymentofsubscriber\", defaultedSubscriptionPaymentofsubscriber)\r\n    console.log(\"subscriptionCancelledbyAmbassador\", subscriptionCancelledbyAmbassador)\r\n    console.log(\"subscriptionCancelledbySubscriber\", subscriptionCancelledbySubscriber)\r\n\r\n    console.log(\"ActiveInactiveReferralPerAmbassador\", activeInactiveReferralPerAmbassador)\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"drawer drawer-mobile\">\r\n                <input id=\"left-sidebar-drawer\" type=\"checkbox\" className=\"drawer-toggle\" />\r\n                <div className=\"drawer-content flex flex-col \">\r\n                    <Header />\r\n                    <main className=\"flex-1 overflow-y-auto pt-2 px-2  bg-base-200\">\r\n\r\n                        {/* <div className=\"h-16\">\r\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                            <div className=\"\">\r\n                                <Datepicker \r\n                                    containerClassName=\"w-72 \" \r\n                                    value={dateValue} \r\n                                    theme={\"dark\"}\r\n                                    inputClassName=\"input input-bordered w-72\" \r\n                                    popoverDirection={\"down\"}\r\n                                    toggleClassName=\"invisible\"\r\n                                    onChange={handleDatePickerValueChange} \r\n                                    showShortcuts={true} \r\n                                    primaryColor={\"black\"} \r\n                                /> \r\n                            \r\n                            </div>\r\n                            <div className=\"text-right \">\r\n                                <button className=\"btn btn-ghost btn-sm normal-case\"><ArrowPathIcon className=\"w-4 mr-2\"/>Refresh Data</button>\r\n                                <button className=\"btn btn-ghost btn-sm normal-case  ml-2\"><ShareIcon className=\"w-4 mr-2\"/>Share</button>\r\n\r\n                                <div className=\"dropdown dropdown-bottom dropdown-end  ml-2\">\r\n                                    <label tabIndex={0} className=\"btn btn-ghost btn-sm normal-case btn-square \"><EllipsisVerticalIcon className=\"w-5\"/></label>\r\n                                    <ul tabIndex={0} className=\"dropdown-content menu menu-compact  p-2 shadow bg-base-100 rounded-box w-52\">\r\n                                        <li><a><EnvelopeIcon className=\"w-4\"/>Email Digests</a></li>\r\n                                        <li><a><ArrowDownTrayIcon className=\"w-4\"/>Download</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>   */}\r\n\r\n                        {/* report section */}\r\n                        <div className=\"bg-zinc-50 px-3 py-3 rounded-xl bg-white shadow-mx border border-zinc-200\">\r\n                            <div className=\"text-xl font-semibold py-1 px-2\">Report</div>\r\n                            <div className=\"divider mt-2\"></div>\r\n                            <div className=\"\">\r\n                                <div className=\"flex w-[100%] align-center\">\r\n                                    <Formik\r\n                                        initialValues={{\r\n                                            start_date: '',\r\n                                            end_date: '',\r\n                                            report_type: null\r\n                                        }}\r\n                                        validationSchema={ReportSchema}\r\n\r\n                                        onSubmit={(values, { resetForm }) => {\r\n                                            handleSubmit(values, { resetForm });\r\n                                        }}\r\n                                    >\r\n                                        {({ resetForm }) => (\r\n                                        <Form className=\"flex w-[100%] justify-between align-center py-3 rounded-sl bg-base-100 rounded px-2\">\r\n\r\n                                            <div className=\"flex flex-col\">\r\n                                                <label htmlFor=\"start_date\">Start Date</label>\r\n                                                <Field name=\"start_date\" type=\"date\" className=\"input input-bordered w-full max-w-xs\" />\r\n                                                <ErrorMessage name=\"start_date\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"flex flex-col\">\r\n                                                <label htmlFor=\"end_date\">End Date</label>\r\n                                                <Field name=\"end_date\" type=\"date\" className=\"input input-bordered w-full max-w-xs\" />\r\n                                                <ErrorMessage name=\"end_date\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                                            </div>\r\n                                            <div className=\"flex flex-col\">\r\n                                                <label htmlFor=\"report_type\">Report Type</label>\r\n                                                <Field as=\"select\" name=\"report_type\" id=\"report_type\" className=\"dropdown-content z-[1] menu p-2 shadow bg-base-100 w-64\">\r\n                                                    <option value=\"\">Select an option</option>\r\n                                                    <option value={0}> Active Subscritpion of Ambassador</option>\r\n                                                    <option value={1}> Active Subscription of Subscriber</option>\r\n                                                    <option value={2}> Defaulted Subscription payment of Ambassador</option>\r\n                                                    <option value={3}> Defaulted Subscription pyament of Subscriber</option>\r\n                                                    <option value={4}> Cancellation of Subscription-Cancelled by Ambassador</option>\r\n                                                    <option value={5}> Cancellation of Subscriptioin-Cancelled by Subcriber</option>\r\n                                                    <option value={6}> Referral Per Ambassador</option>\r\n                                                    <option value={7}> Active Referral Per Ambassador</option>\r\n                                                    <option value={8}> Inactive Referral Per Ambassador</option>\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"report_type\" component=\"div\" className=\"text-red-500 text-sm\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"flex align-center justify-between mt-6\">\r\n                                                <button type=\"submit\" className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center  text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\">Search</button>\r\n                                                <button type=\"button\" className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center  text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\"\r\n                                                 onClick={() => handleResetButton(resetForm)}\r\n                                                 >Reset</button>\r\n\r\n                                                {/* <button type=\"submit\" className=\"btn btn-primary inline-block px-4 py-3 text-sm font-semibold text-center text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\">Export</button> */}\r\n                                            </div>\r\n                                        </Form>\r\n                                         )}\r\n                                    </Formik>\r\n                                </div>\r\n                            </div>\r\n                            <TitleCard title={reportTitleAndUrl[index].title} topMargin=\"mt-2\" >\r\n                                {/* Team Member list in table format loaded constant */}\r\n                                <div className=\"overflow-x-auto w-full\">\r\n                                    <table className=\"table w-full\">\r\n                                        <thead>\r\n                                            {reportTableHeader[index].map((data, index) => {\r\n                                                return <>\r\n                                                    <td key={index}>{data}</td>\r\n                                                </>\r\n                                            })\r\n                                            }\r\n\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {console.log('reportApiUrl=', reportApiUrl)}\r\n                                            {console.log('userReport=', userReport)}\r\n                                            {reportApiUrl === 'active-subscribed-ambassador' && userReport.length > 0 && userReport.map((user, index) => {\r\n\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        {user.firstname !== '' && <td>{user.firstname ? user.firstname.toUpperCase() : 'N/A'} </td>}\r\n                                                        {user.surname !== '' && <td>{user.surname ? user.surname.toUpperCase() : 'N/A'}</td>}\r\n                                                        {user.referral_code !== '' && <td>{user.referral_code ? user.referral_code : 'N/A'}</td>}\r\n                                                        {user.subscription_date !== '' && <td>{user.subscription_date ? new Date(user.subscription_date).toLocaleDateString() : 'N/A'}</td>}\r\n                                                        <td>Active</td>\r\n                                                        {user.ambassador_date !== '' && <td>{user.ambassador_date ? new Date(user.ambassador_date).toLocaleDateString() : 'N/A'}</td>}\r\n\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n\r\n                                            }\r\n\r\n                                            {reportApiUrl === 'active-subscribed-subscriber' && activeSubscribedSubscriber && activeSubscribedSubscriber.map((user, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td>{user.firstname ? user.firstname.toUpperCase() : 'N/A'} </td>\r\n                                                        <td>{user.surname ? user.surname.toUpperCase() : 'N/A'}</td>\r\n                                                        <td>{user.subscription_date ? new Date(user.subscription_date).toLocaleDateString() : 'N/A'}</td>\r\n                                                        <td>Active</td>\r\n\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'defaulted-subscription-paymentof-ambassador' && defaultedSubscriptionPaymentofambassador && defaultedSubscriptionPaymentofambassador.map((item, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{item.userid.firstname.toUpperCase()}</td>\r\n                                                        <td>{item.userid.surname.toUpperCase()}</td>\r\n                                                        <td>{item.userid.referral_code}</td>\r\n                                                        <td>{item.payment_status}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'defaulted-subscription-paymentof-subscriber' && defaultedSubscriptionPaymentofsubscriber && defaultedSubscriptionPaymentofsubscriber.map((item, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{item.userid.firstname.toUpperCase()}</td>\r\n                                                        <td>{item.userid.surname.toUpperCase()}</td>\r\n                                                        <td>{item.payment_status}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'subscription-cancelledby-ambassador' && subscriptionCancelledbyAmbassador.map((item, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{item.userId.firstname.toUpperCase()}</td>\r\n                                                        <td>{item.userId.surname.toUpperCase()}</td>\r\n                                                        <td></td>\r\n                                                        <td>{item.cancellation_date}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'subscription-cancelledby-subscriber' && subscriptionCancelledbySubscriber.map((item, index) => {\r\n                                                return <>\r\n                                                    <tr key={index}>\r\n                                                        <td>{item.userId.firstname.toUpperCase()}</td>\r\n                                                        <td>{item.userId.surname.toUpperCase()}</td>                                                \r\n                                                        <td>{item.cancellation_date}</td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n\r\n                                            {reportApiUrl === 'active-inactive-referral-per-ambassador' && activeInactiveReferralPerAmbassador.map((data, index) => {\r\n                                                return <>\r\n                                                <tr key={index}>\r\n                                                    <td>{data.Subscriber_firstname}</td>\r\n                                                    <td>{data.Subscriber_lastname}</td>\r\n                                                    <td>{data.Ambassador_referralcode}</td>\r\n                                                    <td>{data.Ambassador_firstname}</td>\r\n                                                    <td>{data.Ambassador_lastname}</td>\r\n                                                    <td>{data.Date_of_use_of_referral_code}</td>\r\n                                                    <td>{data.HVG_Subscription_status}</td>\r\n                                                </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'active-referral-per-ambassador' && activeReferralPerAmbassador.map((data, index) => {\r\n                                                return <>\r\n                                                <tr key={index}>\r\n                                                    <td>{data.Subscriber_firstname}</td>\r\n                                                    <td>{data.Subscriber_lastname}</td>\r\n                                                    <td>{data.Ambassador_referralcode}</td>\r\n                                                    <td>{data.Ambassador_firstname}</td>\r\n                                                    <td>{data.Ambassador_lastname}</td>\r\n                                                    <td>{data.Date_of_use_of_referral_code}</td>\r\n                                                </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            {reportApiUrl === 'inactive-referral-per-ambassador' && inactiveReferralPerAmbassador.map((data, index) => {\r\n                                                return <>\r\n                                                <tr key={index}>\r\n                                                    <td>{data.Subscriber_firstname}</td>\r\n                                                    <td>{data.Subscriber_lastname}</td>\r\n                                                    <td>{data.Ambassador_referralcode}</td>\r\n                                                    <td>{data.Ambassador_firstname}</td>\r\n                                                    <td>{data.Ambassador_lastname}</td>\r\n                                                    <td>{data.Date_of_use_of_referral_code}</td>\r\n                                                </tr>\r\n                                                </>\r\n                                            })}\r\n\r\n                                            <tr><td style={{ \"text-align\": \"right\" }} colspan=\"6\"><Link className=\"inline-block px-4 py-3 text-sm font-semibold text-center text-white uppercase transition duration-200 ease-in-out bg-indigo-600 rounded-md cursor-pointer hover:bg-indigo-700\" to={navigateUrl}>View More</Link></td></tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </TitleCard>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n                <Nav />\r\n            </div>\r\n            <RightSidebar />\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"names":["AdminDashboard","reportTitleAndUrl","title","url","navigateUrl","setNavigateUrl","useState","reportApiUrl","setReportApiUrl","userReport","setUserReport","activeSubscribedSubscriber","setActiveSubscribedSubscriber","defaultedSubscriptionPaymentofambassador","setDefaultedSubscriptionPaymentofambassador","defaultedSubscriptionPaymentofsubscriber","setDefaultedSubscriptionPaymentofsubscriber","subscriptionCancelledbyAmbassador","setSubscriptionCancelledbyAmbassador","subscriptionCancelledbySubscriber","setSubscriptionCancelledbySubscriber","activeInactiveReferralPerAmbassador","setActiveInactiveReferralPerAmbassador","activeReferralPerAmbassador","setActiveReferralPerAmbassador","inactiveReferralPerAmbassador","setInactiveReferralPerAmbassador","index","setIndex","dispatch","useDispatch","dateValue","setDateValue","startDate","Date","endDate","authInfo","JSON","parse","localStorage","getItem","useLocation","console","log","loading","setLoading","errorMessage","setErrorMessage","userid","setUserid","id","useNavigate","newNotificationMessage","newNotificationStatus","apiUrl","useEffect","NotificationManager","success","error","removeNotificationMessage","firstRenderReport","toast","configure","axios","get","concat","then","response","data","status","message","position","autoClose","catch","dismiss","_jsxs","_Fragment","children","className","_jsx","type","Header","Formik","initialValues","start_date","end_date","report_type","validationSchema","ReportSchema","onSubmit","values","_ref2","resetForm","handleSubmit","_ref","urls","filtered","filter","item","payment_status","userId","_ref3","Form","htmlFor","Field","name","ErrorMessage","component","as","value","onClick","handleResetButton","TitleCard","topMargin","map","length","user","firstname","toUpperCase","surname","referral_code","subscription_date","toLocaleDateString","ambassador_date","cancellation_date","Subscriber_firstname","Subscriber_lastname","Ambassador_referralcode","Ambassador_firstname","Ambassador_lastname","Date_of_use_of_referral_code","HVG_Subscription_status","style","colspan","Link","to","Nav","RightSidebar","Footer"],"sourceRoot":""}